<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Health.ItemTypes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Health.ItemTypes.ApplicationDataReference">
            <summary>
            Represents a health record item that stores information that can be used by an application to
            render content from another application.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The consumer-friendly name.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ApplicationDataReference.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the application data reference from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> parameter 
            is not an application-data-reference node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the application data reference data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the application data reference data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ApplicationDataReference.Name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.ToString">
            <summary>
            Gets a string representation of the application data reference.
            </summary>
            
            <returns>
            A string representing the application data reference.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.Name">
            <summary>
            Gets or sets the consumer-friendly name.
            </summary>
            
            <value>
            The consumer-friendly name. 
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null or empty</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.RenderFileName">
            <summary>
            Gets or sets the fully qualified name of the Silverlight application.
            </summary>
            
            <value>
            The render file name.
            </value> 
            
            <remarks>
            In current implementations, the xap files themselves must be hosted by Microsoft.
            This name will be used to look-up the source location of the widget for the purpose of display.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null or empty</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.PublicUrl">
            <summary>
            Gets or sets the URL that renders the application.
            </summary>
            
            <value>
            The public URL.
            </value> 
            
            <remarks>
            The rendering is suitable for IFrame embedding.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.ConfigurationUrl">
            <summary>
            Gets or sets the URL to the application's configuration page.
            </summary>
            
            <value>
            The configuration URL.
            </value> 
            
            <remarks>
            This page is where the user can enable/disable the application.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.OpenQueryId">
            <summary>
            Gets or sets the Id to pass to open query to obtain the data.
            </summary>
            
            <value>
            The open query Id.
            </value> 
            
            <remarks>
            The open query is executed by using the <see cref="T:Microsoft.Health.OpenQuery"/> class.
            
            This property is used when HealthVault serves data to the application directly. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.ApplicationDataUrl">
            <summary>
            Gets or sets the URL used to obtain data from the application.
            </summary>
            
            <value>
            The application data URL.
            </value> 
            
            <remarks>
            If there is application specific data, or data that needs to be served from the application
            rather than directly from HealthVault, then this field should contain the fully qualified HTTPS URL.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Assessment">
            <summary>
            Defines a result from a health assessment containing the name and value of the assessed area.
            </summary>
            
            <remarks>
            See <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> for more information.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> class 
            with name and value.
            </summary>
            
            <param name="name">
            The name of the assessed area. See <see cref="P:Microsoft.Health.ItemTypes.Assessment.Name"/> for more information.
            </param>
            
            <param name="value">
            The calculated value of the assessed area. See <see cref="P:Microsoft.Health.ItemTypes.Assessment.Value"/> for more information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> or <paramref name="value"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the assessment data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the assessment data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the assessment item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the assessment data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Assessment.Name"/> or <see cref="P:Microsoft.Health.ItemTypes.Assessment.Value"/> is <b>null</b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.ToString">
            <summary>
            Gets a string of the name or description of the assessment.
            </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Name">
            <summary>
            Gets or sets the name of the assessed area.  
            </summary>
            
            <remarks>
            Examples: Heart attack risk, high blood pressure.
            The preferred vocabulary for route is "health-assessment-name".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Value">
            <summary>
            Gets or sets the calculated value of the assessed area.
            </summary>
            
            <remarks>
            The value may be coded using a specific set of values. 
            Example: Low/Medium/High risk.
            A list of vocabularies may be found in the preferred vocabulary 
            "health-assessment-value-sets". 
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Group">
            <summary>
            Gets or sets the additional information that can be used to help organize the
            results.
            </summary>
            
            <remarks>
            The group is used to specify which group a specific result is in. 
            For example, the supporting assessments that follow a main assessment are coded
            to indicate that they are supporting by specifying the "supporting" code.
            The preferred vocabulary for route is "health-assessment-groups".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CalorieGuideline">
            <summary>
            Stores suggested calorie intak guidelines. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.#ctor">
            <summary>
            Constructs an instance of suggested calorie intake guidelines with default values.
            </summary>
            
            <remarks>
            Examples: Daily calories suggested for weight loss, calories needed for weight 
            maintenance, BMR. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.GeneralMeasurement)">
            <summary>
            Constructs an instance of suggested calorie intake guideline with specified values. 
            </summary>
            
            <remarks>
            Examples: Daily calories suggested for weight loss, calories needed for weight 
            maintenance, BMR. 
            </remarks>
            
            <param name="when"> 
            The date and time the guidelines were created.
            </param>
            
            <param name="name"> 
            The name definies the guideline. 
            </param>
            
            <param name="calories"> 
            The number of calories to support the guideline. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/>, <paramref name="name"/> or <paramref name="calories"/> 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CalorieGuideline.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.CalorieGuideline"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the calorie guideline data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "carolie-guideline" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the calorie guideline data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the calorie guideline data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.When"/>, <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.Name"/> or <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.Calories"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.ToString">
            <summary>
            Gets the representation of a CalorieGuideline instance.
            </summary>
            
            <returns>
            A string representation of the CalorieGuideline instance.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.When">
            <summary>
            Gets or sets the date and time the guidelines were created.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.Name">
            <summary>
            Gets or sets the name of the guideline.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the guideline definition. 
            </value>
            
            <remarks>
            Examples: Maintain weight, Lose weight slowly, Gain weight slowly, Basal metabolic 
            rate (BMR). The preferred vocabulary is "calorie-guideline-names". 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.Calories">
            <summary>
            Gets or sets the number of calories to support the guideline.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the number of 
            calories to support the guideline.
            </value>
            
            <remarks>
            This value expresses the number of calories for a specific time period. 
            For example, 2716 calories per day could be coded as follows:
            Display = "2716 calories/day"
            Structured Value = "2716"
            Structured Units = "calories-per-day"
            using the calorie-guideline-units vocabulary. 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Baby">
            <summary>
            Represents a baby associated with a pregnancy or delivery.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Baby"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the baby information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the baby information into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the baby information.
            </param>
            
            <param name="writer">
            The XML writer into which the baby information should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.ToString">
            <summary>
            Gets a string representation of the baby information.
            </summary>
            
            <returns>
            A string representation of the baby information.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Name">
            <summary>
            Gets or sets the name of the baby.
            </summary>
            
            <remarks>
            If the name is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Gender">
            <summary>
            Gets or sets the gender of the baby.
            </summary>
            
            <remarks>
            If the gender is not known the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "gender-types". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Weight">
            <summary>
            Gets or sets the birth weight of the baby.
            </summary>
            
            <remarks>
            If the weight is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Length">
            <summary>
            Gets or sets the birth length of the baby.
            </summary>
            
            <remarks>
            If the length is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.HeadCircumference">
            <summary>
            Gets or sets the circumference of the baby's head.
            </summary>
            
            <remarks>
            If the head circumference is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Note">
            <summary>
            Gets or sets additional information about the baby.
            </summary>
            
            <remarks>
            If there are no additional notes the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BasicV2">
            <summary>
            Represents information about a health record that is not considered personally
            identifiable.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BasicV2"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BasicV2.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BasicV2"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the basic data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a basic node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the basic data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the basic data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.ToString">
            <summary>
            Gets a string representation of the basic item.
            </summary>
            
            <returns>
            A string representation of the basic item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Gender">
            <summary>
            Gets or sets the gender of the person.
            </summary>
            
            <value>
            The person's gender.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the gender should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.BirthYear">
            <summary>
            Gets or sets the birth year of the person.
            </summary>
            
            <value>
            An integer representing the year.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the birth year should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1000 or greater than
            3000 when setting the value.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Country">
            <summary>
            Gets or sets the country of residence.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if the country should not be stored.
            </remarks>
            
            <value>
            A codable value representing the country. 
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.PostalCode">
            <summary>
            Gets or sets the postal code of the country of residence.
            </summary>
            
            <value>
            A string representing the postal code.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.City">
            <summary>
            Gets or sets the city of residence.
            </summary>
            
            <value>
            A string representing the city.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.StateOrProvince">
            <summary>
            Gets or sets the state or province of residence.
            </summary>
            
            <value>
            A string representing the state or province.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the state
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.FirstDayOfWeek">
            <summary>
            Gets or sets the preferred first day of the week.
            </summary>
            
            <value>
            A <see cref="T:System.DayOfWeek"/> instance representing the day.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the first day of the week 
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Languages">
            <summary>
            Gets the language(s) the person speaks.
            </summary>
            
            <value>
            A list of the languages.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation">
            <summary>
            Percentage of oxygen saturation in the blood.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Double)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the measurement was taken.</param>
            
            <param name="value">The percentage of oxygen saturation in the blood.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BloodOxygenSaturation.TypeId">
            <summary>
            Retrieves the unique identifier for the blood oxygen saturation item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the blood oxygen saturation data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "blood-oxygen-saturation" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the blood oxygen saturation data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the blood oxygen saturation data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.ToString">
            <summary>
            Gets the description of a blood oxygen instance. 
            </summary>
            
            <returns>
            A string representation of the blood oxygen item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.Value">
            <summary>
            Gets or sets the measured blood oxygen saturation percentage. 
            </summary>
            
            <value>
            The measured blood oxygen saturation percentage.
            </value> 
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement. 
            </summary>
            
            <value>
            The technique used to obtain the measurement.
            </value>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "blood-oxygen-saturation-measurement-method". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.MeasurementFlags">
            <summary>
            Gets or sets the additional information about the measurement. 
            </summary>
            
            <value>
            The additional information about the measurement
            </value>
            
            <remarks>
            Examples: Incomplete measurement, irregular heartbeat. If the value is not known, 
            it will be set to <b>null</b>. The preferred vocabulary for this value is 
            "blood-oxygen-saturation-measurement-method".
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyCompositionValue">
            <summary>
            A single measurement of boyd composition.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> class 
            with default values.
            </summary>
            
            <remarks>
            The mass-value element is used to store mass values, and the percentage-value is 
            used to store precentages. An application should set one or the other. When both 
            values are available, they should be stored in separate instance. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the body composition value data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the body composition value data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the body composition value item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the body composition value data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.ToString">
            <summary>
            Gets a string representation of BodyCompositionValue. 
            </summary> 
            
            <returns>
            A string representation of the BodyCompositionValue.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyCompositionValue.MassValue">
            <summary>
            Gets or sets a body composition measurement stored as a mass.
            </summary>
            
            <remarks>
            Examples: 45 Kg, 15 lbs. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyCompositionValue.PercentValue">
            <summary>
            Gets or sets a body composition measurement stored as a percentage.  
            </summary>
            
            <remarks>
            Examples: 0.37 (37%), 0.075 (7.5%). 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyComposition">
            <summary>
            Information about the body composition of the record owner. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.#ctor">
            <summary>
            Creates an instance of information about the body composition of the record owner
            with default values.
            </summary>
            
            <remarks>
            Examples: % body fat, lean muscle mass.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.BodyCompositionValue)">
            <summary>
            Creates an instance of information about the body composition of the record owner
            with specified time, measurement name, and value.
            </summary>
            
            <remarks>
            Examples: % body fat, lean muscle mass.
            </remarks>
            
            <param name="when"> 
            The date and time of the measurement. 
            </param>
            
            <param name="measurementName">
            The name of the measurement.
            </param>
            
            <param name="compositionValue"> 
            The value of the measurement. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/>, <paramref name="measurementName"/> or 
            <paramref name="compositionValue"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BodyComposition.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyComposition"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the body composition data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "body-composition" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the body composition data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the body composition data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.When"/>, <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementName"/> or <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.Value"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.ToString">
            <summary>
            Gets the representation of a body composition instance.
            </summary>
            
            <returns>
            A string representation of the body composition item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementName">
            <summary>
            Gets or sets the name of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name
            of this measurement.
            </value>
            
            <remarks>
            Examples: Body fat, lean muscle. The preferred vocabulary is 
            "body-composition-measurement-names".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.Value">
            <summary>
            Gets or sets the value of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> instance representing the value of 
            this measurement.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the technique used 
            to obtain the measurement. 
            </value>
            
            <remarks>
            Examples: Bioelectrical impedance, DXA, Skinfold (calipers). If the measurement method 
            is missing, the value should be set to <b>null</b>. The preferred vocabulary is
            "body-composition-measurement-methods".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.Site">
            <summary>
            Gets or sets the body part that is the subject of the measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the site 
            </value>
            
            <remarks>
            Examples: Left arm, head, torso. If the site is absent, the measurement is for 
            the whole body. The preferred vocabulary is "body-composition-sites".
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyDimension">
             <summary>
             Stores a body dimension.
             </summary>
            
             <remarks>
             Exmaples: Waist size, head circumference, length (pediatric). 
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.#ctor">
            <summary>
            Stores a body dimension.
            </summary>
            
            <remarks>
            Examples: Waist size, head circumference, length (pediatric). 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.Length)">
             <summary>
             Stores a body dimension.
             </summary>
             
             <remarks>
             Examples: Waist size, head circumference, length (pediatric). 
             </remarks>
            
             <param name="when">
             The date and time of the body dimension measurement.
             </param>
             
             <param name="measurementName">
             The name of the body dimension measurement.
             </param>
             
             <param name="value">
             The value of the body dimension measurement. 
             </param>
             
             <exception cref="T:System.ArgumentNullException"> 
             If <paramref name="when"/>, <paramref name="measurementName"/> or 
             <paramref name="value"/> is <b>null</b>.
             </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BodyDimension.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyDimension"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the body dimension data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "body-dimension" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the body dimension data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the body dimension data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.When"/>, <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.MeasurementName"/> or <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.Value"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.ToString">
            <summary>
            Gets the representation of a body dimension instance. 
            </summary>
            
            <returns>
            A string representation of the body dimension instance. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.When">
            <summary>
            Gets or sets the date and time of the body dimension measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.MeasurementName">
            <summary>
            Gets or sets the name of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name
            of this measurement.
            </value>
            
            <remarks>
            Choose the appropriate preferred vocabulary based on your scenario. 
            The preferred vocabularies are "body-dimension-measurement-names" 
            and "body-dimension-measurement-names-pediatrics".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.Value">
            <summary>
            Gets or sets the value of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> instance representing the value of 
            this measurement.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Concern">
            <summary>
            A concern that a person has about a condition or life issue. 
            </summary>
            
            <remarks>
            A concern that a person has about a condition or life issue. 
            Concerns are more general than conditions, and are about the 
            person's feelings. Examples include "concerned about managing 
            a chronic condition", "family issues", "emotional issues", etc. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class,
            with a specified description. 
            </summary>
            
            <param name="description">
            The description of a concern.
            </param>
            
            <exception cref="T:System.ArgumentNullException"> 
            If <paramref name="description"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class,
            with the specified description. 
            </summary>
            
            <param name="description">
            The description of a concern.
            </param>
            
            <exception cref="T:System.ArgumentException"> 
            If <paramref name="description"/> is <b> null</b> or empty. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Concern.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Concern"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the concern data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a concern node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the concern data to the specified XmlWriter.
             </summary>
             
             <param name="writer">
             The XmlWriter to write the concern data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Concern.Description"/> is <b>null</b> or empty.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.ToString">
            <summary>
            Gets the description of a concern instance.
            </summary>
            
            <returns>
            A string representation of the concern item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Concern.Description">
            <summary>
            Gets or sets the description of a concern.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Concern.Status">
            <summary>
            Gets or sets the status of the concern.
            </summary>
            
            <remarks>
            Examples of status include active or inactive. If the 
            status is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ConditionEntry">
            <summary>
            Defines a single health or medical issue/problem.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry"/> class 
            with name.
            </summary>
            
            <param name="name">
            The name or description of a condition.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Condition"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the condition data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the condition data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the condition item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the condition data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ConditionEntry.Name"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.ToString">
            <summary>
            Gets a string of the name or description of the condition item.
            </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Name">
            <summary>
            Gets or sets the name or description of a medical condition entry.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.OnsetDate">
            <summary>
            Gets or sets the date of onset or the first diagnosis.  
            </summary>
            
            <remarks>
            The onset date should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.ResolutionDate">
            <summary>
            Gets or sets the date the condition resolved (or for multiple acute
            episodes, the last date the condition resolved).
            </summary>
            
            <remarks>
            The resolution date should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Resolution">
            <summary>
            Gets or sets the resolution which is a statement of how the condition 
            was resolved.  
            </summary>
            
            <remarks>
            The resolution of a condition should be set to <b>null</b> if it is unknown.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Occurrence">
            <summary>
            Gets or sets the description of how often the condition occurs.
            </summary>
            
            <remarks>
            Examples of occurrence include acute, chronic. The occurrence of condition
            should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Severity">
             <summary>
             Gets or sets the severity of a condition.  
             </summary>
             
             <remarks>
             The severity should be set to <b>null</b> if it is unknown.
             </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Contraindication">
            <summary>
            Represents a health record item type that encapsulates a contraindication.
            </summary>
            
            <remarks>
            A contraindication consists of the substances (such as foods or drugs) that interacts badly
            with a specific condition or drugs a patient is already taking.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contraindication"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contraindication"/> class with the 
            specified substance and status.
            </summary>
            
            <param name="substance">
            The substance that is contraindicated.
            </param>
            
            <param name="status">
            The status of the contraindication. Usually 'Active' or 'inactive'.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="substance"/> or <paramref name="status"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Contraindication.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            <value>A GUID.</value>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this contraindication instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the contraindication data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a contraindication node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the contraindication data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the contraindication data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Contraindication.Substance"/> or <see cref="P:Microsoft.Health.ItemTypes.Contraindication.Status"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.ToString">
            <summary>
            Gets a string representation of the contraindication item.
            </summary>
            
            <returns>
            A string representation of the contraindication item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Substance">
            <summary>
            Gets or sets the substance of the contraindication.
            </summary>
            
            <value>
            A codable value indicating the substance that is contraindicated.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Status">
            <summary>
            Gets or sets the status of the contraindication.
            </summary>
            
            <value>
            The status of the contraindication is usually 'active' or 'inactive'.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Source">
            <summary>
            Gets or sets the source of the contraindication.
            </summary>
            
            <value>
            For example, a contraindication against leafy green
            vegetables might have as a source the blood thinner Warfarin, which would be coded here
            using an appropriate medication vocabulary.
            </value>
            
            <remarks>
            If the source is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Documenter">
            <summary>
            Gets or sets the documenter of the contraindication.
            </summary>
            
            <value>
            For example, a contraindication against leafy green
            vegetables might have as a source the blood thinner Warfarin, which would be coded here
            using an appropriate medication vocabulary.
            </value>
            
            <remarks>
            This is the person that documented the issue (physician, pharmacist, etc.)
            If the documenter is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.DocumentedDate">
            <summary>
            Gets or sets the date the contraindication was documented.
            </summary>
            
            <remarks>
            If the documented date is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Delivery">
            <summary>
            Represents the details of the delivery of a baby.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Delivery"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the delivery.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the delivery into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the delivery.
            </param>
            
            <param name="writer">
            The XML writer into which the delivery should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.ToString">
            <summary>
            Gets a string representation of the delivery.
            </summary>
            
            <returns>
            A string representation of the delivery.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Location">
            <summary>
            Gets or sets the place where the delivery occurred.
            </summary>
            
            <remarks>
            If there is no information about the location of the delivery the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.TimeOfDelivery">
            <summary>
            Gets or sets the date/time of the delivery.
            </summary>
            
            <remarks>
            If there is no information about the time of the delivery the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.LaborDuration">
            <summary>
            Gets or sets the duration of labor in minutes.
            </summary>
            
            <remarks>
            If there is no information about the labor duration the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/>is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Complications">
            <summary>
            Gets a collection containing any complications that occurred during labor and delivery.
            </summary>
            
            <remarks>
            If there is no information about the complications the collection should be empty.
            The preferred vocabulary for this value is "delivery-complications". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Anesthesia">
            <summary>
            Gets a collection containing any anesthesia used during labor and delivery.
            </summary>
            
            <remarks>
            If there is no information about the anesthesia the collection should be empty.
            The preferred vocabulary for this value is "anesthesia-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.DeliveryMethod">
            <summary>
            Gets or sets the method of delivery.
            </summary>
            
            <remarks>
            If there is no information about the delivery method the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "delivery-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Outcome">
            <summary>
            Gets or sets the outcome for a fetus.
            </summary>
            
            <remarks>
            If there is no information about the outcome the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "pregnancy-outcomes". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Baby">
            <summary>
            Gets or sets details about a baby.
            </summary>
            
            <remarks>
            If there is no information about the baby the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Note">
            <summary>
            Gets or sets additional information about the delivery.
            </summary>
            
            <remarks>
            If there are no additional notes the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Encounter">
            <summary>
            Encounter class contains information related to a medical encounter.
            </summary>
            
            <remarks>
            It describes the medical encounter a person has. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Encounter"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Encounter.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Information related to a medical encounter.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medical encounter data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a encounter node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medical encounter data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medical encounter data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.ToString">
            <summary>
            Gets a string representation of the encounter item.
            </summary>
            
            <returns>
            A string representation of the encounter item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.When">
            <summary>
            Gets or sets the date/time when the medical encounter occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Reason">
            <summary>
            Gets or sets the reason of the medical encounter. The description
            of the encounter.
            </summary>
            
            <value>
            It is a string. 
            </value>
            
            <remarks>
            Examples include heart failure, broken legs, or annual physical
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Type">
            <summary>
            Gets or sets the type of medical encounter.
            </summary>
            
            <value>
            A CodableValue representing the encounter type.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Duration">
            <summary>
            Gets or sets the encounter duration.
            </summary>
            
            <remarks>
            The duration of the medical encounter. Set the value to <b>null</b> if the duration should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.ConsentGranted">
            <summary>
            Gets and sets a value indicating whether consent 
            has been granted by the person.
            </summary>
            
            <value>
            <b>true</b>if consent has been granted for this medical encounter; 
            otherwise, <b>false</b>. If <b>null</b>, it is unknown whether consent has been granted.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Facility">
            <summary>
            The facility where the encounter occurred.  
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Exercise">
            <summary>
            Represents a health record item type that encapsulates an aerobic session.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> class with 
            the specified date/time and activity.
            </summary>
            
            <param name="when">
            The date/time when the exercise occurred.
            </param>
            <param name="activity">
            The type of activity.
            </param>
             
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="activity"/> parameter is <b>null</b>.
            </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Exercise.TypeId">
            <summary>
            The unique identifier for the Exercise item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the exercise data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "exercise" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the exericse data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.When"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.Activity"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.ToString">
             <summary>
             Gets a string representation of the Exercise item.
             </summary> 
            
             <returns>
             A string representation of the Exercise item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.When">
            <summary>
            Gets or sets the date/time when the exercise occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance. 
            The value defaults to the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Activity">
            <summary>
            Gets or sets the type of activity.
            </summary>
            
            <remarks>
            Stores the overall activity for the exercise period.
            
            Examples: Running, hiking, walking, golfing, dancing.
            The preferred vocabulary for route is "exercise-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Activity"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Title">
            <summary>
            Gets or sets a descriptive title for this activity.
            </summary>
            
            <value>
            String. 
            </value>
            
            <remarks>
            Examples: Hiking up Mt. Baker, 3-day walk, Memorial day triathlon.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Distance">
            <summary>
            Gets or sets the distance covered in the exercise.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the distance.
            </value>
            
            <remarks>
            Distances are stored in meters. The application 
            must convert the distance entered by the user
            into meters and should also store the distance
            and units entered by the user in the display-value
            so that it can be displayed to the user in their
            preferred unit of measure when viewing the data.
            
            Set the value to <b>null</b> if there is no distance.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Duration">
            <summary>
            Gets or sets the duration of the exercise in minutes.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Details">
            <summary>
            Gets additional information about the exercise.
            </summary>
            
            <remarks>
            Details is a dictionary of the items, where the key is the 
            string name of the item.
            </remarks>
            
            <value>
            A dictionary of <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> items.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Segments">
            <summary>
            Gets information pertaining to a portion of the overall exercise.
            </summary>
            
            <value>
            A collection of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> items.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseDetail">
            <summary>
            Represents additional information about the exercise.
            </summary>
            
            <remarks>
            The detail information typically stores information that is specific to the type of exercise activity
            and any device used to measure it.
            
            Examples: Average heart rate, average temperature, intensity.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Intensity">
            <summary>
            Detail name for Intensity.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumHeartrate_BPM">
            <summary>
            Detail name for MinimumHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageHeartrate_BPM">
            <summary>
            Detail name for AverageHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.PeakHeartrate_BPM">
            <summary>
            Detail name for PeakHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Work_kJ">
            <summary>
            Detail name for Work_kJ.
            </summary>
            <remarks>
            The work_kJ detail pertains to the actual amount of work done during the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.CaloriesBurned_calories">
            <summary>
            Detail name for CaloriesBurned_calories.
            </summary>
            <remarks>
            The CaloriesBurned_calories detail expresses the number of food calories required to 
            balance out the energy expended in the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.FatCaloriesBurned_calories">
            <summary>
            Detail name for FatCaloriesBurned_calories.
            </summary>
            <remarks>
            The FatCaloriesBurned_calories detail expresses the number of fat calories required to 
            balance out the energy expended in the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.EnergyOld_kJ">
            <summary>
            Detail name for EnergyOld_kJ.
            </summary>
            <remarks>
            This value corresponds to Energy_kJ value in the AerobicSession type.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.EnergyFromFatOld_kJ">
            <summary>
            Detail name for EnergyFromFatOld_kJ.
            </summary>
            <remarks>
            This value corresponds to EnergyFromFat_kJ value in the AerobicSession type.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumSpeed_m_per_s">
            <summary>
            Detail name for MinimumSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageSpeed_m_per_s">
            <summary>
            Detail name for AverageSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumSpeed_m_per_s">
            <summary>
            Detail name for MaximumSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumPace_s_per_100m">
            <summary>
            Detail name for MinimumPace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AveragePace_s_per_100m">
            <summary>
            Detail name for AveragePace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumPace_s_per_100m">
            <summary>
            Detail name for MaximumPace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumPower_watts">
            <summary>
            Detail name for MinimumPower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AveragePower_watts">
            <summary>
            Detail name for AveragePower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumPower_watts">
            <summary>
            Detail name for MaximumPower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumTorque_Nm">
            <summary>
            Detail name for MinimumTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageTorque_Nm">
            <summary>
            Detail name for AverageTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumTorque_Nm">
            <summary>
            Detail name for MaximumTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.LeftRightBalance_percent">
            <summary>
            Detail name for LeftRightBalance_percent.
            </summary>
            <remarks>
            This detail stores the balance between the left and right leg when cycling, 
            and is a number from 0 to 1. The detail stores the percentage of work the left leg is performing, 
            and the right leg percentage is 1 minus the left leg value.
            For example, if the this value is 0.45, the left leg is doing 45% of the work and the right leg is
            doing 55% of the work.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumCadence_RPM">
            <summary>
            Detail name for MinimumCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageCadence_RPM">
            <summary>
            Detail name for AverageCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumCadence_RPM">
            <summary>
            Detail name for MaximumCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumTemp_celsius">
            <summary>
            Detail name for MinimumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageTemp_celsius">
            <summary>
            Detail name for AverageTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumTemp_celsius">
            <summary>
            Detail name for MaximumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumAltitude_meters">
            <summary>
            Detail name for MaximumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageAltitude_meters">
            <summary>
            Detail name for AverageAltitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumAltitude_meters">
            <summary>
            Detail name for MaximumAltitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.ElevationGain_meters">
            <summary>
            Detail name for ElevationGain_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.ElevationLoss_meters">
            <summary>
            Detail name for ElevationLoss_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Steps_count">
            <summary>
            Detail name for Steps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AerobicSteps_count">
            <summary>
            Detail name for AerobicSteps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AerobicStepDuration_minutes">
            <summary>
            Detail name for AerobicStepDuration_minutes.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Odometer_meters">
            <summary>
            Detail name for Odometer_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumVerticalSpeedAscending_m_per_s">
            <summary>
            Detail name for MaximumVerticalSpeedAscending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumVerticalSpeedDescending_m_per_s">
            <summary>
            Detail name for MaximumVerticalSpeedDescending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageVerticalSpeedAscending_m_per_s">
            <summary>
            Detail name for AverageVerticalSpeedAscending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageVerticalSpeedDescending_m_per_s">
            <summary>
            Detail name for AverageVerticalSpeedDescending_m-per-s.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.#ctor(Microsoft.Health.ItemTypes.CodedValue,Microsoft.Health.ItemTypes.StructuredMeasurement)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class 
            with specified values
            </summary>
            <param name="name">The name of the information stored in this exercise detail. </param>
            <param name="value">The value of the exercise detail</param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> or <paramref name="value"/> is <b>null</b>.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the exercise detail from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the exercise detail.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the exercise detail to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the exercise detail.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the exercise detail data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <paramref name="value"/> is <b>null</b>.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.ToString">
             <summary>
             Gets a string representation of the ExerciseDetail item.
             </summary> 
            
             <returns>
             A string representation of the ExerciseDetail item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseDetail.Name">
            <summary>
            Gets or sets the name of the information stored in this exercise detail.
            </summary>
            
            <remarks>
            Names should be values contained in the exercise-detail-names vocabularies, and that
            vocabulary should be specified when adding new details.
            Constants that are equal to these names can be found as static members of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class.
            </remarks>
            
            <value>
            A CodedValue representing the detail name. 
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The name is being set to null.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseDetail.Value">
            <summary>
            Gets or sets the value of the exercise detail.
            </summary>
            
            <remarks>
            For example, to store an average heartrate of 125, place 125 in the value element and
            set the unit to "BPM".
            Units should be coded using the exercise-units vocabulary.
            </remarks>
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> representing the detail value.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The value is being set to null.
            </exception>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue">
            <summary>
            A exercise sample that contains one data value.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor(System.Double,System.Double)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue"/> type with the specified values.
            </summary>
            <param name="offsetInSeconds">The offset of this sample from the beginning of the sample set.</param>
            <param name="value">The data value of this sample.</param>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString">
            <summary>
            Gets a string representation of the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds">
            <summary>
            Gets or sets the offset in seconds of this data sample from the beginning of the sample set. 
            </summary>
            
            <value>
            The offset in seconds.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="OffsetInSeconds"/> value is less than zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value">
            <summary>
            Gets or sets the data value stored in the sample.
            </summary>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue">
            <summary>
            A exercise sample that contains two data values.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue"/> type with the specified values.
            </summary>
            <param name="offsetInSeconds">The offset of this sample from the beginning of the sample set.</param>
            <param name="value1">The first data value of this sample.</param>
            <param name="value2">The second data value of this sample.</param>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.ToString">
            <summary>
            Gets a string representation of the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.OffsetInSeconds">
            <summary>
            Gets or sets the offset in seconds of this data sample from the beginning of the sample set. 
            </summary>
            
            <value>
            The offset in seconds.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="OffsetInSeconds"/> value is less than zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.Value1">
            <summary>
            Gets or sets the first data value stored in the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.Value2">
            <summary>
            Gets or sets the second data value stored in the sample.
            </summary>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSamples">
            <summary>
            Stores a set of samples related to an exercise.
            </summary>
            <remarks>
            Examples: Heart rate samples, speed samples, position samples.
            
            Exercise samples are related to exercises through related items. 
            
            The samples are stored in the other-data section of the object, and must
            be fetched by specifying HealthItemRecordSections.BlobPayload.
            
            The format of the other-data section is the HealthVault comma-separated format. It should be accessed
            using the ExerciseSamplesData property. 
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Heartrate_BPM">
            <summary>
            Sample name for Heartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Distance_meters">
            <summary>
            Sample name for Distance_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Position_LatLong">
            <summary>
            Sample name for Position_LatLong.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Speed_m_per_s">
            <summary>
            Sample name for Speed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Pace_s_per_100m">
            <summary>
            Sample name for Pace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Power_watts">
            <summary>
            Sample name for Power_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Torque_Nm">
            <summary>
            Sample name for Torque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Cadence_RPM">
            <summary>
            Sample name for Cadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Temperature_celsius">
            <summary>
            Sample name for Temperature_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Altitude_meters">
            <summary>
            Sample name for Altitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.AirPressure_kPa">
            <summary>
            Sample name for AirPressure_kPa.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Steps_count">
            <summary>
            Sample name for Steps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.AerobicSteps_count">
            <summary>
            Sample name for AerobicSteps_count.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue,System.Double)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the samples were recorded.</param>
            <param name="name">The kind of information that is stored in this set of samples.</param>
            <param name="unit">The unit of measure for the samples.</param>
            <param name="samplingInterval">The time interval between samples in seconds.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.TypeId">
            <summary>
            Retrieves the unique identifier for the exercise samples item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the exercise samples data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "exercise-samples" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise samples data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the exericse samples data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.ToString">
            <summary>
            Gets the description of a exercise samples instance. 
            </summary>
            
            <returns>
            A string representation of the exercise samples item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.When">
            <summary>
            Gets or sets the date and time when the samples were collected.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.Name">
            <summary>
            Gets or sets the kind of information that is stored in this sample set. 
            </summary>
            
            <remarks>
            The name encodes both the type of information that is stored and the units in 
            which it is stored. 
            
            The preferred vocabulary is exercise-sample-names.
            
            Example sample types and units. See the preferred vocabulary for others.
            Heartrate_BPM
            Distance_meters
            Position_LatLong
            Speed_m-per-s
            Pace_s-per-100m
            Power_watts
            Torque_Nm
            Cadence_RPM
            Temperature_celsius
            Altitude_meters
            AirPressure_kPa
            Steps_count
            AerobicSteps_count
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.Unit">
            <summary>
            Gets or sets the unit of measure for the samples. 
            </summary>
            
            <remarks>
            The preferred vocabulary is exercise-units.
            
            The appropriate units are defined by the code used for the Name property. For example, if the 
            name property is set to the entry Power_watts, the Unit should be coded to watts. 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.SamplingInterval">
            <summary>
            Gets or sets the initial sampling interval between samples, in seconds.  
            </summary>
            <summary>
            The samples data format supports modifying the sampling interval in the middle of a 
            set of samples. See the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData"/> class for more information.
            </summary>
            
            <returns>
            An double representing the sampling interval in seconds.
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="Sampling"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData">
            <summary>
            The sample data.
            </summary>
            <remarks>
            The sample data is exposed as a <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData"/> instance. 
            
            To get the sample data when fetching an instance of the ExerciseSamples thing type, you must specify that the other-data section
            be returned to access the ExerciseSamplesData.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            If the sampling interval has not be set before the property is referenced.
            </exception>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSamplesData">
            <summary>
            The ExerciseSamplesData class is used to store and retrieve samples data for the 
            <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> class. It handles converting from a sample data format to the
            comma-separated format.
            </summary>
            <remarks>
            Data is represented as either an array of samples with a single value (such as heart rate), or an array
            of samples with two values (such as a GPS position). The <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> or <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties
            should be used as appropriate based on the stored data type. 
            
            The underlying format allows the sampling interval to be changed in the middle of a sample set. This class
            will detect sampling intervals that have changed, and insert appropriate escape values into the resulting data.
            </remarks>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamplesData"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamplesData"/> class 
            with the specified data, encoding, and content type.
            </summary>
            
            <param name="data">
            The data to store in the other data section of the health record
            item.
            </param>
            
            <param name="contentEncoding">
            The type of encoding that was done on the data. Usually this will
            be "base64" but other encodings are acceptable.
            </param>
            
            <param name="contentType">
            The MIME-content type of the data.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise samples to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the height data to.
            </param>
            <exception cref="T:System.InvalidOperationException">
            If both the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> and <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties have data in them
            or
            if neither the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> nor <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties have data in them.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SamplingInterval">
            <summary>
            Gets or sets the initial sampling interval for the set of samples. 
            </summary>
            <remarks>
            The sampling interval may change between two samples.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the sampling interval is less than or equal to zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples">
            <summary>
            Gets the sample data as a collection of single values.
            </summary>
            <remarks>
            The majority of sample types contain only a single value per sample. This property
            is used to access samples for those sample types. 
            </remarks>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples">
            <summary>
            Gets the sample data as a collection of two-valued samples.
            </summary>
            <remarks>
            Some samples types (such as GPS location) consist not of a single value but of two separate values
            This property is used to access samples for those sample types. 
            </remarks>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSegment">
            <summary>
            Information pertaining to a portion of the overall exercise.
            </summary>
            
            <remarks>
            This is typically used to store information about separate laps in a race or individual events within
            a triathlon.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> class 
            with the specified values.
            </summary>
            <param name="activity">The type of activity for this segment.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="activity"/> is <b>null</b>. 
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the lap from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the lap.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the lap to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the lap.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the lap data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The Activity property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.ToString">
             <summary>
             Gets a string representation of the ExerciseSegment item.
             </summary> 
            
             <returns>
             A string representation of the ExerciseSegment item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Activity">
            <summary>
            Gets or sets the type of activity for this segment of the exercise.
            </summary>
            
            <remarks>
            Examples: Running, hiking, walking, golfing, dancing.
            The preferred vocabulary for route is "exercise-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Activity"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Title">
            <summary>
            Gets or sets a descriptive title for this segment.
            </summary>
            
            <value>
            String. 
            </value>
            
            <remarks>
            Examples: Lap 1, bicycle leg, first half.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Distance">
            <summary>
            Gets or sets the distance covered in the segment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the distance.
            </value>
            
            <remarks>
            Distances are stored in meters. The application 
            must convert the distance entered by the user
            into meters and should also store the distance
            and units entered by the user in the display-value
            so that it can be displayed to the user in their
            preferred unit of measure when viewing the data.
            
            Set the value to <b>null</b> if there is no distance.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Duration">
            <summary>
            Gets or sets the duration of the segment in minutes.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Offset">
            <summary>
            Gets or sets the offset in minutes of the segment from the start of exercise.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no offset.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Details">
            <summary>
            Gets additional information about the segment.
            </summary>
            
            <remarks>
            Details is a dictionary of the items, where the key is the 
            string name of the item.
            </remarks>
            
            <value>
            A dictionary of <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> items.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistory">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition that 
             a relative of the record owner has. Relating this item to a family
             history person item will provide a comprehensive family medical history 
             record. 
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.#ctor(Microsoft.Health.ItemTypes.ConditionEntry)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> 
            class with condition.
            </summary>
            
            <param name="condition">
            Relative condition is the condition of a relative. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="condition"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistory.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the family history data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistory.Condition"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.ToString">
             <summary>
             Gets a string representation of the family history item.
             </summary> 
            
             <returns>
             A string representation of the family history item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistory.Condition">
            <summary>
            Gets or sets a condition.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> of relative condition is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistory.Relative">
            <summary>
            Gets or sets information about the relative with this condition.
            </summary>
            
            <remarks>
            The relative should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition that 
             a relative of the record owner has. Relating this item to a family
             history person item will provide a comprehensive family medical history 
             record. 
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.#ctor(Microsoft.Health.ItemTypes.ConditionEntry)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> 
            class with condition.
            </summary>
            
            <param name="relativeCondition">
            Relative condition is the condition of a relative. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="relativeCondition"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryCondition.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history condition data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history condition node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history condition data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryCondition.RelativeCondition"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.ToString">
             <summary>
             Gets a string representation of the family history condition item.
             </summary> 
            
             <returns>
             A string representation of the family history condition item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryCondition.RelativeCondition">
            <summary>
            Gets or sets a condition.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> of relative condition is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history person item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.#ctor(Microsoft.Health.ItemTypes.PersonItem)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="name">The name of a relative. </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryPerson.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> instance from the 
             data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history person data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history person node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the family history person data to the specified XmlWriter.
             </summary> 
             
             <param name="writer">
             The XmlWriter to write the family history person data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.RelativeName"/> parameter is <b>null</b>.
             </exception> 
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.ToString">
             <summary>
             Gets a string representation of the family history person item.
             </summary> 
            
             <returns>
             A string representation of the family history person item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="value"/> is <b>null</b> on set.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <remarks>
            The relationship should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history person item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the relative's data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the family history relative data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the family history relative item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the family history relative data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="T:Microsoft.Health.ItemTypes.Name"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.ToString">
             <summary>
             Gets a string representation of the family history person item.
             </summary> 
            
             <returns>
             A string representation of the family history person item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <remarks>
            The relationship should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history relative item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> 
            class with the specified relatinship.
            </summary>
            
            <param name="relationship">
            The relationship of this person to the record owner.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="relationship"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the relative's data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the family history relative data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the family history relative item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the family history relative data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.Relationship"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.ToString">
             <summary>
             Gets a string representation of the family history relative item.
             </summary> 
            
             <returns>
             A string representation of the family history relative item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.RegionOfOrigin">
            <summary>
            Gets or sets the region of origin the relative. 
            </summary>
            
            <remarks>
            The region of origin should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryV3">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition 
             that a relative of the record-owner has.
             
             To create a family tree, use the relationship-types vocabulary
             to code both directions of the parent/child relationship between
             one family member and another. These codes are stored as
             related items for both parent and child data instances.
            
             The flexibity of having both condition and relative be optional
             allows applications to give the users the ability to just put in
             the details they know at the time they want to create the tree.
             If they just know the name of the relative, or a particular condition
             that's all it takes to get a new instance started.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryV3.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the family history data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ToString">
             <summary>
             Gets a string representation of the family history item.
             </summary> 
            
             <returns>
             A string representation of the family history item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Conditions">
            <summary>
            Gets a collection of a conditions.
            </summary>
            
            <remarks>
            If there is no information about the condition of the relative the collection should be empty.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Relative">
            <summary>
            Gets or sets information about the relative with this condition.
            </summary>
            
            <remarks>
            The relative should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GeneralMeasurement">
            <summary>
            A coded measurement and a display representation.
            </summary>
            
            <remarks>
            Examples include 30 cc, 500 mg, 15 liters, 30 inches, etc.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> 
            class with display parameter.
            </summary>
            
            <param name="display"> It is a sentence to display for the measurement
            by the application. </param>
            
            <exception cref="T:System.ArgumentException">
            
            If <paramref name="display"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the general measurement data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the general measurement data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML.
            </param>
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Display"/> is <b>null</b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.ToString">
             <summary>
             Gets a string representation of the general measurement item.
             </summary> 
             
             <returns>
             A string representation of the general measurement item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Display">
             <summary>
             Gets or sets a user readable string to display for the measurement 
             by the applications.
             </summary>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
             whitespace on set.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Structured">
            <summary>
            Gets the coded values of the measurements.  
            </summary>
            
            <remarks>
            Applications typically use this for calculations, charting, or graphing. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GeneticSnpResults">
             <summary>
             Stores a set of SNP genetic test results.
             </summary>
             
             <remarks>
             Examples: 
             
             The SNP data is stored in the blob store of the object, and must
             be fetched by specifying HealthItemRecordSections.BlobPayload.
            
             The format of the other-data section is the HealthVault comma-separated format.
             
             Within the comma-separated data, each SNP is encoded as follows:
             
             [refSNP id],[strand orientation],[result],[assay id],[start position],[end position]
             
             Where:
             refSNP id: Reference SNP identifier from NCBI dbSNP database.
              strand orientation: "+" encodes top, "-" encodes bottom.
              result: the result of the test.
              assay id: platform dependent probe set id. 
              start position: start position on the chromosome. 
              end posiition: end position on the chromosome. 
             
             Example: rs1891906,-,GT, SNP_C-315533, 940106, 940107
             
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,System.String,System.String,Microsoft.Health.ItemTypes.GenomeNumberingScheme)">
             <summary>
             Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> with specified 
             parameters. 
             </summary>
             
             <param name="when">The date and time of the SNP test.</param>
             
             <param name="genomeBuild">The genome build that defines the SNPs.</param>
            
             <param name="chromosome">The chromosome on which the SNPs are located.</param>
             
             <param name="numberingScheme">The numbering scheme used for positions.</param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="when"/> is <b> null</b>. 
             </exception>
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="genomeBuild"/> or <paramref name="chromosome"/> 
             is <b>null</b> or empty, or <paramref name="numberingScheme"/> is not 0 or 1. 
             </exception> 
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="numberingScheme"/> is neither zero based scheme nor one
             based scheme. 
             </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GeneticSnpResults.TypeId">
            <summary>
            Retrieves the unique identifier for the genetic snp result type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> instance from the data
            in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the genetic snp result data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "genetic-snp-results" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the SNP test results to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the SNP test result data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.When"/> or <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.GenomeBuild"/> or <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Chromosome"/> 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.ToString">
            <summary>
            Gets the description of a SNP result instance. 
            </summary>
            
            <returns>
            A string representation of the SNP result instance. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.When">
            <summary>
            Gets or sets the date and time when the samples were collected.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.GenomeBuild">
             <summary>
             Gets or sets the genome build that defines the SNPs. 
             </summary>
            
             <remarks>
             Example: NCBI Build 36.3.
             </remarks>
             
             <exception cref="T:System.ArgumentException">
             If the <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
             whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Chromosome">
             <summary>
             Gets or sets the chromosome on which the SNPs are located.  
             </summary>
            
             <remarks>
             Examples: 1, 22, X, MT
             </remarks>
             
             <exception cref="T:System.ArgumentException">
             If the <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
             whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.NumberingScheme">
            <summary>
            The numbering scheme used for positions. 
            </summary>
            
            <remarks>
            0 = 0 based numbering scheme.
            1 = 1 based numbering scheme. 
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is neither zero based scheme nor one
            based scheme. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.OrderedBy">
             <summary>
             Gets or sets the person or organization that ordered the SNP test. 
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.TestProvider">
             <summary>
             The organization that provides the SNP test service.  
             </summary>
            
             <remarks>
             This organization typically also provides analysis of the results.  
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.LaboratoryName">
            <summary>
            The name of the laboratory that performed the test.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.AnnotationVersion">
             <summary>
             Gets or sets the annotation version.
             </summary>
            
             <value>
             A string representing the annotation version.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the annotation version should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.dbSnpBuild">
             <summary>
             Gets or sets the dbSNP build version.
             </summary>
            
             <value>
             A string representing the dbSNP build version.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the dbSNP version should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Platform">
             <summary>
             Gets or sets the platform.
             </summary>
            
             <value>
             A string representing the platform.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the platform should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.SnpData">
             <summary>
             The SNP test results data.  
             </summary>
            
             <remarks>
             The SNP test result data is exposed as a <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.SnpData"/> instance. 
             
             To get the SNP test result data when fetching an instance of the 
             GeneticSnpResults health record item type, you must specify that
             the other-data section to be returned to access the SnpData.
             </remarks>
             
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GenomeNumberingScheme">
            <summary>
            Provides values for genome numbering scheme.
            </summary>
            
            <remarks>
            It can be either 0 based numbering scheme or 1 based numbering scheme.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.ZeroBased">
            <summary>
            0 based numbering scheme.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.OneBased">
            <summary>
            1 based number scheme. 
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.Unknown">
            <summary>
            Unknown numbering scheme. 
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembership">
            <summary>
            Represents a health record item type that encapsulates
            a collection of group membership information.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembership"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GroupMembership.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this group membership instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the group membership data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a group membership node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the group membership data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the group membership data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.ToString">
            <summary>
            Gets a string representation of the group membership.
            </summary>
            
            <returns>
            A string representing the group membership.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembership.GroupMemberships">
            <summary>
            Gets a collection of group memberships of the record owner.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembership.Expires">
            <summary>
            Gets or sets the date/time when the group membership expires.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            Set the value to <b>null</b> if there is no expiration.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembershipActivity">
            <summary>
            Represents a health record item type that an activity related to a group membership.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> class with the 
            specified date/time and activity.
            </summary>
            
            <param name="when">
            The date/time when the activity occurred.
            </param>
            
            <param name="activity">
            The activity that occurred.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="activity"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GroupMembershipActivity.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the group membership activity data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a group-membership-activity node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the group membership activity data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the group membership activity data to.
            </param>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.When"/> or <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            
            <returns>
            <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity"/> if set; otherwise String.Empty.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.When">
            <summary>
            Gets or sets the date/time when the group membership activity
            occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> for the group membership activity. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity">
            <summary>
            Gets or sets the activity that occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/>.
            </value>
            
            <remarks>
            For example: RecordAuthorizedForApplication.
            The preferred vocabulary for the activity is "group-membership-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.ActivityInfo">
            <summary>
            Gets or sets additional information about the activity.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembershipType">
            <summary>
            Represents a group membership.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with the specified
            name.
            </summary>
            
            <param name="name">
            The group name.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with the specified
            name and value.
            </summary>
            
            <param name="name">
            The name of the group type.
            </param>
            
            <param name="value">
            The value the member has for the group type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the group membership type from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the group membership type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the group membership type data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the group membership type.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the group membership type to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipType.Name"/>  or <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipType.Value"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.ToString">
            <summary>
            Gets a string representation of the group membership type.
            </summary>
            
            <returns>
            A string representing the group membership type.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipType.Name">
            <summary>
            Gets or sets the group membership name.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipType.Value">
            <summary>
            Gets or sets the group membership value.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HealthAssessment">
            <summary>
            A health record item containing the results of a health assessment.
            </summary>
            
            <remarks>
            Examples of health assessment include high blood pressure assessment and diabetes assessment.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue,System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Assessment})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> class with the specified 
            mandatory parameters.
            </summary>
            
            <param name="when">
            The date and time the assessment was completed.
            </param>
            
            <param name="name">
            The application's name for the assessment. See <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Name"/> for more information.
            </param>
            
            <param name="category">
            The type of the assessment.
            </param>
            
            <param name="result">
            The results of the assessment.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="category"/>, or <paramref name="result"/> 
            is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty or <paramref name="result"/> is empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HealthAssessment.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this health assessment instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the health assessment data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a health-assessment node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the health assessment data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the health assessment data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.When"/>, <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Name"/>, <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Category"/>, or 
            <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Result"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.ToString">
            <summary>
            Gets a string representation of the health assessment.
            </summary>
            
            <returns>
            A string representation of the health assessment.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.When">
            <summary>
            Gets or sets the date and time of the health assessment was completed.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Name">
            <summary>
            Gets or sets the application's name for the assessment.
            </summary>
            
            <remarks>
            Example: Fabrikam's Heart Risk Assessment.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Category">
            <summary>
            Gets or sets the type of assessment.
            </summary>
            
            <remarks>
            Examples: Heart assessment, diabetes assessment, colon cancer assessment.
            The preferred vocabulary for route is "health-assessment-category".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Result">
            <summary>
            Gets a collection of the results of the assessment.
            </summary>
            
            <remarks>
            Example: High blood pressure, low risk.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HeartRate">
            <summary>
            A measurement of the record owner's heart rate.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Int32)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the measurement was taken.</param>
            
            <param name="value">The heart rate in beats per minute (BPM).</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than zero.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HeartRate.TypeId">
            <summary>
            Retrieves the unique identifier for the heart rate item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the heart rate data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "heart-rate" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the heart rate data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the heart rate data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.HeartRate.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.ToString">
            <summary>
            Gets the description of a heart rate instance. 
            </summary>
            
            <returns>
            A string representation of the heart rate item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.Value">
            <summary>
            Gets or sets the heart rate in beats per minutes (BPM). 
            </summary>
            
            <returns>
            An integer representing the heart rate in beats per minute(BPM).
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement. 
            </summary>
            
            <value>
            The technique used to obtain the measurement.
            </value>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "heart-rate-measurement-method".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementConditions">
            <summary>
            Gets or sets the conditions under which the heart rate was measured.
            </summary>
            
            <value>
            The conditions under which the heart rate was measured. 
            </value>
            
            <remarks>
            Examples: Resting, Active, Morning, Evening. If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "heart-rate-measurement-conditions".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementFlags">
            <summary>
            Gets or sets the additional information about the measurement. 
            </summary>
            
            <value>
            The additional information about the measurement
            </value>
            
            <remarks>
            Examples: Incomplete measurement, irregular heartbeat, triple scan. The preferred
            vocabulary for this value is "heart-rate-measurement-flags". If the value is not 
            known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Immunization">
            <summary>
            Represents health record item type that contains information about an immunization.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The name of the immunization.
            </param>
            
            <param name="dateAdministrated">
            The approximate date that the immunization was adminstrated.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The name of the immunization.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is null.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Immunization.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the immunization data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an immunization node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the immunization data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the immunization data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Immunization.Name"/> has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.ToString">
            <summary>
            Gets a string representation of the immunization item.
            </summary>
            
            <returns>
            A string representation of the immunization item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Name">
            <summary>
            Gets or sets the name of the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name.
            </value>
            
            <remarks>
            The preferred vocabulary for the immunization name is "vaccines-cvx".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is null during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.DateAdministrated">
            <summary>
            Gets or sets the date the immunization was administrated.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Administrator">
            <summary>
            Gets or sets the name of the administrator of the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the person.
            </value> 
            
            <remarks>
            Set the value to null if the administrator should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Manufacturer">
            <summary>
            Gets or sets the manufacturer of the vaccine.
            </summary>
            
            <value>
            A string representing the manufacturer.
            </value> 
            
            <remarks>
            Set the value to null if the manufacturer should not be stored.
            The preferred vocabulary for the immunization manufacturer is "vaccine-manufacturers-mvx".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Lot">
            <summary>
            Gets or sets the lot of the vaccine.
            </summary>
            
            <value>
            A string representing the lot.
            </value> 
            
            <remarks>
            Set the value to null if the lot should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Route">
            <summary>
            Gets or sets the medical route for the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the route.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.ExpirationDate">
            <summary>
            Gets or sets the expiration date for the vaccine.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> instance representing the date.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Sequence">
            <summary>
            Gets or sets the sequence for the immunization.
            </summary>
            
            <value>
            A string representing the sequence.
            </value>
            
            <remarks>
            Set the value to null if the consent should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.AnatomicSurface">
            <summary>
            Gets or sets the anatomic surface for the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the surface.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.AdverseEvent">
            <summary>
            Gets or sets any adverse event description for the immunization.
            </summary>
            
            <value>
            A string representing the event description.
            </value> 
            
            <remarks>
            Set the value to null if the description should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Consent">
            <summary>
            Gets or sets the consent description for the immunization.
            </summary>
            
            <value>
            A string representing the consent description.
            </value> 
            
            <remarks>
            Set the value to null if the consent should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ItemTypeRegistrar">
            <summary>
            Defines a method for registering all the health record item types with the
            <see cref="T:Microsoft.Health.ItemTypeManager"/> that are in this assembly.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ItemTypeRegistrar.RegisterAssemblyHealthRecordItemTypes">
            <summary>
            Registers all the health record item types in this assembly with the 
            <see cref="T:Microsoft.Health.ItemTypeManager"/>.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResults">
            <summary>
            A series of lab test results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.LabTestResultGroup})">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="labGroups">Lab groups is a set of lab results.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="labGroups"/> parameter is <b> null </b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.LabTestResults.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> instance from the data in the XML. 
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the lab test results data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a lab test results node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the lab test results data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the lab test results data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.LabTestResults.Groups"/> is <b>null</b> or empty.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.ToString">
             <summary>
             Gets a string representation of the lab test results item.
             </summary> 
            
             <returns>
             A string representation of the lab test results item.
             </returns>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.When">
            <summary>
            Gets or sets the date and time of the lab tests results.  
            </summary>
            
            <remarks>
            The date and time should be set to <b> null </b> if they are 
            unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.Groups">
            <summary>
            Gets a set of lab results.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.OrderedBy">
            <summary>
            Gets or sets the information about the organization which
            ordered the lab tests.
            </summary>
            
            <remarks>
            It should be set to <b> null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultGroup">
            <summary>
             A set of lab test results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> 
            class with group name.
            </summary>
            
            <param name="groupName"> 
            The name of this set of tests.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="groupName"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the lab test results group type data from.
            </param> 
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the lab test results group type data to the specified XmlWriter.
             </summary> 
             
             <param name="nodeName">
             The name of the node to write XML output. 
             </param>
             
             <param name="writer">
             The XmlWriter to write the lab test results group type data to.
             </param> 
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b> null </b> or empty.
             </exception>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b> null </b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.LabTestResultGroup.GroupName"/> parameter is <b> null</b>.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.ToString">
             <summary>
             Gets a string representation of the lab test results group type item.
             </summary> 
            
             <returns>
             A string representation of the lab test results group type item.
             </returns>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.GroupName">
            <summary>
            Gets or sets the name of this set of tests.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.LaboratoryName">
            <summary>
            Gets or sets the information about the laboratory which performed 
            this set of tests.
            </summary>
            
            <remarks>
            Laboratory name should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.Status">
            <summary>
            Gets or sets the overall status of this group and the sub group tests.  
            </summary>
            
            <remarks>
            The status can be incomplete, pending, processing, etc. It should be 
            set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.SubGroups">
            <summary>
            Gets lab test result sub groups.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.Results">
            <summary>
            Gets a set of results for this group.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultDetails">
            <summary>
            A single laboratory test.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultDetails"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultDetails"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the lab test result type data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If the first node in <paramref name="navigator"/> is not
            a lab test result type node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the lab test result type data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML output.
            </param>
            
            <param name="writer">
            The XmlWriter to write the lab test result type data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.ToString">
             <summary>
             Gets a string representation of the lab test result type item.
             </summary> 
            
             <returns>
             A string representation of the lab test result type item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.When">
            <summary>
            Gets or sets date and the time of the laboratory test.  
            </summary>
            
            <remarks>
            They should be set to <b>null</b> if they are unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Name">
             <summary>
             Gets or sets name of the laboratory test.  
             </summary>
             
             <remarks>
             It should be set to <b>null</b> or empty if it is unknown.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Substance">
             <summary>
             Gets or sets substance that is tested.  
             </summary>
             
             <remarks>
             It should be set to <b>null</b> if it is unknown.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.CollectionMethod">
            <summary>
            Gets or sets the collection method for the laboratory test.  
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.ClinicalCode">
            <summary>
            Gets or sets the clinical code for the lab tests.  
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Value">
            <summary>
            Gets or sets the clinical value within a laboratory result. 
            </summary>
            
            <remarks>
            The type of value is defined within a laboratory result, which includes 
            value, unit, reference and toxic range. It should be set to <b>null</b> 
            if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Status">
            <summary>
            Gets or sets the status of the laboratory results.  
            </summary>
            
            <remarks> 
            Examples of status include complete and pending. It should be 
            set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Note">
            <summary>
            Gets or sets a note that augments the laboratory result.  
            </summary>
            
            <remarks> 
            There are two scenarios in which a note is typically added:
            A note may provide additional information about interpreting 
            the result beyond what is stored in the ranges associated with 
            the value. 
            Or, a note may be use to provide the textual result of a lab test
            that does not have a measured value.
            
            Formatting:
            Notes may come from systems that require a line-based approach to textual display. To support
            this, applications should render the spaces and newlines in the note, and use a fixed-width font. 
            The form transform for the lab test results type shows one way to do this.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultValue">
            <summary>
            A clinical value within a laboratory result.
            </summary>
            
            <remarks>
            This type defines a clinical value within a laboratory result,
            including value, unit, reference, and toxic ranges.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.#ctor(Microsoft.Health.ItemTypes.GeneralMeasurement)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> 
            class with the specified measurement.
            </summary>
            
            <param name="measurement">
            The value of the lab results.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="measurement"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> instance from the data in the XML.
            </summary>
            
            <param name="navigator">
            The XML to get the lab test result value type data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If the first node in <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the lab test result value type data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write the XML.</param>
            
            <param name="writer">
            The XmlWriter to write the lab test result value type data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.LabTestResultValue.Measurement"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.ToString">
             <summary>
             Gets a string representation of the lab test result value type item.
             </summary> 
            
             <returns>
             A string representation of the lab test result value type item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Measurement">
            <summary>
            Gets or sets measurement.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Ranges">
            <summary>
            Gets the ranges that are associated with this test.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Flag">
            <summary>
            Gets a collection containing the flags for laboratory results.
            </summary>
            
            <value>
            Example values are normal, high, low.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudy">
            <summary>
            Represents a health record item type that encapsulates a study containing medical images.
            </summary>
            
            <remarks>
            DICOM data is stored in the named BLOB portion of the data type, and it is recommended 
            that normal DICOM conventions are used for naming.
            
            An application may store XDS-i manifest information in XML format in the xds-i element.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudy"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.MedicalImageStudySeries})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudy"/> class
            specifying mandatory values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
            <param name="series">
            Medical image study series
            </param>
            <param name="when">
            Time that the study was created.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="series"/> parameter is <b>null</b> or doesn't contain any series.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.MedicalImageStudy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medical image study data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="typeSpecificXml"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medical image study node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study into
            the specified XML writer.
            </summary>
            
            <param name="writer">
            The XML writer into which the medical image study series should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudy.When"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Series"/> collection is <b>null</b> or empty. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.ToString">
            <summary>
            Gets a string representation of the medical image study.
            </summary>
            
            <returns>
            A string representation of the medical image study.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.When">
            <summary>
            Gets or sets the time that the study was created.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tags (0008, 0020) and (0008, 0030).
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.PatientName">
            <summary>
            Gets or sets the name of the patient as contained in the medical image.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0010, 0010).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Description">
            <summary>
            Gets or sets a description of the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 1030).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Series">
            <summary>
            Gets a collection of series.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Reason">
            <summary>
            Gets or sets the reason for the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0032, 1030).
            
            If there is no information about the reason the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.PreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image 
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.KeyImages">
            <summary>
            Gets the important images in the study.
            </summary>
            
            <remarks>
            If there is no information about the key images the collection should be empty.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.StudyInstanceUID">
            <summary>
            Gets or sets the study instance UID.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0020,000D).
            If there is no study instance UID the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception> 
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries">
            <summary>
            Represents the details of a specific series of images in a medical image study.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries"/> class
            specifying mandatory values.
            </summary>
            
            <param name="acquisitionDateTime">
            The date and time that the image was acquired.
            </param>
            <param name="images">
            Medical image study series images. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="acquisitionDateTime"/> parameter is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="images"/> parameter is <b>null</b> or doesn't contain any images.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the medical image study series.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study series into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the medical image study series.
            </param>
            
            <param name="writer">
            The XML writer into which the medical image study series should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.AcquisitionDateTime"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Images"/> is <b>null</b> or doesn't contain any image. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ToString">
            <summary>
            Gets a string representation of the medical image study series.
            </summary>
            
            <returns>
            A string representation of the medical image study series.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.AcquisitionDateTime">
            <summary>
            Gets or sets the date and time that the image was acquired.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tags (0008, 0022) and (0008, 0032).
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Description">
            <summary>
            Gets or sets a description of the series.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 103E).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Images">
            <summary>
            Gets and sets medical images. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.InstitutionName">
            <summary>
            Gets or sets the name of the institution where the images were acquired.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 0080).
            
            If there is no information about the institution the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ReferringPhysician">
            <summary>
            Gets or sets the physician who ordered the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 0090).
            
            If there is no information about the physician the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Modality">
             <summary>
             Gets or sets the method (or modality) in which the images were acquired.
             </summary>
             
             <remarks>
             This value corresponds to DICOM tag (0008, 0060).
             
             If there is no information about the modality the value should be set to <b>null</b>.
            
             The preferred vocabulary is dicom.modality.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.BodyPart">
            <summary>
            Gets or sets the body part that was imaged.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0018, 0015).
            
            If there is no information about the body part the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.PreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.SeriesInstanceUID">
            <summary>
            Gets or sets the series instance UID.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0020,000E)
            
            If there is no series instnace UID, the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage">
            <summary>
            Represents the details of a single image in a series.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage"/> class with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage"/> class
            specifying mandatory values.
            </summary>
            
            <param name="imageBlobName">
            The name of the BLOB holding the image.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="imageBlobName"/> parameter is <b>null</b> or empty or contains only whitespace.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the medical image study series image.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study series image into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the medical image study series image.
            </param>
            Name of the BLOB holding the image.
            <param name="writer">
            The XML writer into which the medical image study series image should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName"/> is <b>null</b> or empty or contains only whitespace.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString">
            <summary>
            Gets a string representation of the medical image study series image.
            </summary>
            
            <returns>
            A string representation of the medical image study series image.
            </returns>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName">
            <summary>
            Gets or sets the name of the BLOB holding the image.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008,0018).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no image preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Medication">
            <summary>
            Represents a medication health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Medication"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Medication"/> class with the specified name.
            </summary>
            
            <param name="name">
            The name of the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Medication.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this medication instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medication data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medication node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medication data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medication data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Medication.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.ToString">
            <summary>
            Gets a string representation of the medication.
            </summary>
            
            <returns>
            A string representation of the medication.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Name">
            <summary>
            Gets or sets the medication name and clinical code.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.GenericName">
            <summary>
            Gets or sets the generic name of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Dose">
            <summary>
            Gets or sets the dose of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 1 tablet, 50 ml.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Strength">
            <summary>
            Gets or sets the strength of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 500 mg, 10 mg/ml.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Frequency">
            <summary>
            Gets or sets how often the medication is taken.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 1 tablet per day, 2 every 6 hours, as needed.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Route">
            <summary>
            Gets or sets the route by which the medication is administered.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for route is "medication-routes".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Indication">
            <summary>
            Gets or sets the indication for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.DateStarted">
            <summary>
            Gets or sets the date on which the person started taken the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.DateDiscontinued">
            <summary>
            Gets or sets the date on which the medication was discontinued.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Prescribed">
            <summary>
            Gets or sets the source of the prescription.
            </summary>
            
            <remarks>
            A medication that is prescribed by a physician should code "prescribed"
            into this element. 
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for prescribed is "medication-prescribed".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Prescription">
            <summary>
            Gets or sets the prescription for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicationFill">
            <summary>
            Represents a health record item about filling a medication.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicationFill"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicationFill"/> class with the specified name.
            </summary>
            
            <param name="name">
            The name of the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.MedicationFill.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this medication fill instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medication fill data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medication-fill node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medication fill data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medication fill data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.MedicationFill.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.ToString">
            <summary>
            Gets a string representation of the medication fill.
            </summary>
            
            <returns>
            A string representation of the medication fill.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.Name">
            <summary>
            Gets or sets the medication name and clinical code.
            </summary>
            
            <remarks>
            The name should be understandable to the person taking the medication, such as the 
            brand name.
            The preferred vocabularies for medication name are "RxNorm" or "NDC".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.DateFilled">
            <summary>
            Gets or sets the date the prescription was filled.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.DaysSupply">
            <summary>
            Gets or sets the number of days supply of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.NextRefillDate">
            <summary>
            Gets or sets the date on which the prescription can be refilled.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.RefillsLeft">
            <summary>
            Gets or sets the number of medication refills left.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.Pharmacy">
            <summary>
            Gets or sets the pharmacy.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.PrescriptionNumber">
            <summary>
            Gets or sets the free form prescription number.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.LotNumber">
            <summary>
            Gets or sets the lot number for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Organization">
            <summary>
            An organization entity.
            </summary>
            
            <remarks>
            An entity such as a hospital, a pharmacy,  or a doctor's office. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.#ctor">
            <summary>
            It creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Organization"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.#ctor(System.String)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Organization"/>
            class with specific values.
            </summary>
             
            <param name="name">
            The name of the organization is mandatory. 
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the organization information from the 
            specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the organization information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.UriFormatException">
            If <paramref name="Website"/> is empty. 
            -or-
            The scheme specified in <paramref name="Website"/> is invalid.
            -or-
            <paramref name="Website"/> contains too many slashes.
            -or-
            The host name specified in <paramref name="Website"/> is invalid.
            -or-
            The file name specified in <paramref name="Website"/> is invalid.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the organization data to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the organization information.
            </param>
            
            <param name="writer">
            The XML writer into which the organization information should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Organization.Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.ToString">
            <summary>
            Gets a string representation of the organization information. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Name">
            <summary>
            Gets or sets the name of the organization.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="Name"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Contact">
            <summary>
            Gets or sets the contact information of the organization.
            </summary>
            
            <remarks> 
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Type">
            <summary>
            Gets or sets the type of the organization.
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Website">
            <summary>
            Gets or sets the website URL of the organization.
            </summary>
            
            <value>
            The URL for the organization website. 
            </value>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PeakFlow">
            <summary>
            Represents a health record item that encapsulates a single peak flow reading.
            </summary>
            
            <remarks>
            Peak flow measures are typically collected on a daily basis by patients to track their
            lung function.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date and time when the peak flow reading occurred.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.PeakFlow.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the peack flow data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> parameter 
            is not a peak-flow node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the peak flow data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the peak flow data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.PeakFlow.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.ToString">
            <summary>
            Gets a string representation of the peak flow reading.
            </summary>
            
            <returns>
            A string representing the peak flow reading.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.When">
            <summary>
            Gets or sets the date and time when the peak flow reading occurred.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </returns>
            
            <remarks>
            The value defaults to the current year only.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Pef">
            <summary>
            Gets or sets the peak expiratory flow measured in liters per 
            second (L/s).
            </summary>
            
            <returns>
            A number representing the peak flow.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the peak expiratory flow should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Fev1">
            <summary>
            Gets or sets the forced expiratory volume in one second, measured in 
            liters (L).
            </summary>
            
            <returns>
            A number representing the volume.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the forced expiratory volume should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Fev6">
            <summary>
            Gets or sets the forced expiratory volume in six seconds, measured in 
            liters (L).
            </summary>
            
            <returns>
            A number representing the volume.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the forced expiratory volume should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.MeasurementFlags">
            <summary>
            Gets a collection of additional information about the measurement.
            </summary>
            
            <returns>
            A collection of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the flags.
            </returns> 
            
            <remarks>
            Examples: incomplete measurement.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Pregnancy">
            <summary>
            Record of a pregnancy.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Pregnancy"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Pregnancy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Information related to a pregnancy.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the pregnancy data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a pregnancy node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the pregnancy data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the pregnancy data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.ToString">
            <summary>
            Gets a string representation of the pregnancy item.
            </summary>
            
            <returns>
            A string representation of the pregnancy item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.DueDate">
             <summary>
             Gets or sets the approximate due date.
             </summary>
            
             <remarks>
             If there is no due date the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.LastMenstrualPeriod">
            <summary>
            Gets or sets the first day of the last menstrual cycle.
            </summary>
            
            <remarks>
            If the last menstrual period is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.ConceptionMethod">
            <summary>
            Gets or sets the method of conception.
            </summary>
            
            <remarks>
            If the conception method is not known the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "conception-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.FetusCount">
            <summary>
            Gets or sets the number of fetuses.
            </summary>
            
            <remarks>
            If the fetus count is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.GestationalAge">
            <summary>
            Gets or sets the number of weeks of pregnancy at the time of delivery.
            </summary>
            
            <remarks>
            If the gestational age is not known the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.Delivery">
            <summary>
            Gets a collection of the details of the resolution of each fetus.
            </summary>
            
            <remarks>
            If there is no delivery information the collection should be empty.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Prescription">
            <summary>
            Information related to a medication prescription.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Prescription"/> class with default 
            values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.#ctor(Microsoft.Health.ItemTypes.PersonItem)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Prescription"/> class 
            with the specified prescriber.
            </summary>
            
            <param name="prescribedBy">
            The person that prescribed the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="person"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this Prescription instance from the data in the XML.
            </summary>
            
            <param name="itemNav">
            The XML containing the prescription information.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a prescription node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the prescription data to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the prescription data.
            </param>
            
            <param name="writer">
            The XmlWriter to write the prescription data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Prescription.PrescribedBy"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.ToString">
            <summary>
            Gets a string representation of the prescription item.
            </summary>
            
            <returns>
            A string representation of the prescription item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.PrescribedBy">
            <summary>
            Gets or sets the person that prescribed the medication.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Person"/> instance.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.DatePrescribed">
            <summary>
            Gets or sets the date the medication was prescribed.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.AmountPrescribed">
            <summary>
            Gets or sets the amount of medication prescribed.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Substitution">
            <summary>
            Gets or sets whether a substitution is permitted.
            </summary>
            
            <remarks>
            Example: Dispense as written, substitution allowed.
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for substitution is "medication-substitution".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Refills">
            <summary>
            Gets or sets the number of refills of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.DaysSupply">
            <summary>
            Gets or sets the number of days supply of medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.PrescriptionExpiration">
            <summary>
            Gets or sets the date the prescription expires.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Instructions">
            <summary>
            Gets or sets the medication instructions.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Procedure">
            <summary>
            Represents a health record item type that encapsulates a medical procedure.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Procedure"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Procedure"/> class with the 
            specified date and time.
            </summary>
            
            <param name="name">
            The name of the procedure.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Procedure.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this procedure instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the procedure data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a procedure node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the procedure data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the procedure data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Procedure.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.ToString">
            <summary>
            Gets a string representation of the procedure.
            </summary>
            
            <returns>
            A string representing the procedure.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.When">
            <summary>
            Gets or sets the date/time when the procedure occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing 
            the date. The default value is the current year.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.Name">
            <summary>
            Gets or sets the name of the procedure.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the title.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the title should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.PrimaryProvider">
            <summary>
            Gets or sets the primary provider contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the primary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.AnatomicLocation">
            <summary>
            Gets or sets the anatomic location for the procedure.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the location.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the location should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.SecondaryProvider">
            <summary>
            Gets or sets the secondary provider contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the secondary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.QuestionAnswer">
            <summary>
            Represents a question and answer stored as a health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with the specified 
            date and time and the question that was asked.
            </summary>
            
            <param name="when">
            The date and time the question was asked.
            </param>
            
            <param name="question">
            The question that was asked.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="question"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Collections.Generic.IList{Microsoft.Health.ItemTypes.CodableValue},System.Collections.Generic.IList{Microsoft.Health.ItemTypes.CodableValue})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with the specified 
            date and time and the question that was asked.
            </summary>
            
            <param name="when">
            The date and time the question was asked.
            </param>
            
            <param name="question">
            The question that was asked.
            </param>
            
            <param name="answerChoice">
            The possible answers to the question. See <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice"/> for more information
            and the preferred vocabulary.
            </param>
            
            <param name="answer">
            The answer to the question.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="question"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.QuestionAnswer.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this question/answer instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the question/answer data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a question-answer node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the question/answer data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the question/answer data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.When"/> or <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.Question"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.ToString">
            <summary>
            Gets a string representation of the question/answer.
            </summary>
            
            <returns>
            A string representation of the question/answer.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.When">
            <summary>
            Gets or sets the date and time of the question was asked.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.Question">
            <summary>
            Gets or sets the question that was asked.
            </summary>
            
            <remarks>
            A list of vocabularies may be found in the "question-sets". 
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice">
            <summary>
            Gets a collection of the possible answers to the question.
            </summary>
            
            <remarks>
            Questions that are answered using free-form text will not specify answer choices.
            The answer vocabulary used is typically one related to the vocabulary used for the question.
            For example, the choice for "High blood pressure" would code for that condition. 
            Standard answers (such as yes/no) can be coded using the preferred vocabulary 
            "answer-choice-sets".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.Answer">
            <summary>
            Gets a collection of the recorded answer(s) to the question.
            </summary>
            
            <remarks>
            In many cases, the coding of the answer is identical to the coding of the 
            selected <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice"/>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SnpData">
            <summary>
            The <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class is used to store and retrieve SNP result data.
            </summary>
            
            <remarks>
            SNP data are stored in a dictionary. It handles converting from a SNP result 
            format to the comma-separated format.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class 
            with the specified data, encoding, and content type.
            </summary>
            
            <param name="data">
            The data to store in the other data section of the health record
            item.
            </param>
            
            <param name="contentEncoding">
            The type of encoding that was done on the data. Usually this will
            be "base64" but other encodings are acceptable.
            </param>
            
            <param name="contentType">
            The MIME-content type of the data.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor(Microsoft.Health.OtherItemData)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class with
            specified other item data. 
            </summary>
            
            <param name="otherItemData">The other item data.</param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems">
            <summary>
            Reloads SNP items from other data section of the health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.CreateSnpItems">
            <summary>
            Gets all the genetic snp results as strings and store them in a dictionary. 
            </summary>
            
            <exception cref="T:System.FormatException">
            If the data cannot be completely parsed into SNP item. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the SNP Items to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the SNP item data.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If <see cref="P:Microsoft.Health.ItemTypes.SnpData.SnpItems"/> has not been set. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.StoreSnpItems">
             <summary>
             Take the dictionary SNP items, and convert them into the underlying 
             format.  
             </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpData.SnpItems">
            <summary>
            Gets the SNP data as a dictionary of SNP items.
            </summary>
            
            <remarks>
            SNP items in a dictionary can be easily accessed by the reference SNP Id. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SnpItem">
             <summary>
             A SNP test result item.
             </summary>
            
             <remarks>
             Within the comma-separated data, each SNP is encoded as follows:
             
             [refSNP id],[strand orientation],[result],[assay id],[start position],[end position]
             
             Where:
             refSNP id: Reference SNP identifier from NCBI dbSNP database.
              strand orientation: "+" encodes top, "-" encodes bottom.
              result: the result of the test.
              assay id: Platform dependent probe set id.
              start position: Start position on the chromosome.
              end position: End position on the chromosome.
              
             Example: rs1891906,-,GT, SNP_C-315533, 940106, 940107
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpItem"/> type with default values. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpItem"/> type with the specified values.
            </summary>
            
            <param name="referenceSnpId">Reference SNP Id (rs).</param>
            <param name="strandOrientation">The orientation of the strand. </param>
            <param name="result">The result of the SNP test. </param>
            <param name="assayId">The platform dependent probe set id. </param>
            <param name="startPosition">The start position on the chromosome. </param>
            <param name="endPosition">The end position on the chromosome. </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.ToString">
            <summary>
            Gets a string representation of the snp result item. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.ReferenceSnpId">
            <summary>
            Gets or sets the Reference SNP ID of the result. 
            </summary>
            
            <remarks>
            For example, rs132342. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.StrandOrientation">
            <summary>
            Gets or sets the orientation of the strand.  
            </summary>
            
            <remarks>
            The value can be either + or -.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.Result">
            <summary>
            Gets or sets the result of the SNP test.  
            </summary>
            
            <remarks>
            For example, AA, AT. Each letter correspond to one copy of 
            the specified SNP is the customer's genome, since each of us has two 
            copies of each gene under normal circumstance.  
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.AssayId">
            <summary>
            Gets or sets the assay ID.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.StartPosition">
            <summary>
            Gets or sets the start position.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.EndPosition">
            <summary>
            Gets or sets the end Position.  
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Status">
             <summary>
             Stores status information about a specific health record item. 
             </summary>
             
             <remarks>
             Each status is related to one or more health record items which are stored as related items.
            
             For example, the HealthVault shell creates a status item to indicate that a CCR or CCD document has 
             been reconciled, and that document is linked using a related item. 
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.Status"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.Status"/> class,
            with a specified status type. 
            </summary>
            
            <param name="statusType">
            The specific type of status.
            </param>
            
            <exception cref="T:System.ArgumentNullException"> 
            If <paramref name="statusType"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Status.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Status"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the status data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a status node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the status data to the specified XmlWriter.
             </summary>
             
             <param name="writer">
             The XmlWriter to write the status data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Status.StatusType"/> is <b>null</b> or empty.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.ToString">
            <summary>
            Gets a string representation of the status instance.
            </summary>
            
            <returns>
            A string representation of the status item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Status.StatusType">
            <summary>
            Gets or sets the status type of a status.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Status.Text">
            <summary>
            Gets or sets additional information about the status.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.StructuredMeasurement">
            <summary>
            A measurement using specific units.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="value"> 
            The value of the measurement. 
            </param>
            
            <param name="units"> 
            The units of the measurement. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="units"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the structured measurement data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             The first node in <paramref name="navigator"/> is not
             a structured measurement node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the structured measurement data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML.
            </param>
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Units"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.ToString">
             <summary>
             Gets a string representation of the structured measurement item.
             </summary> 
            
             <returns>
             A string representation of the structured measurement item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Units">
             <summary>
             Gets or sets unit of measure for the value.  
             </summary>
            
             <remarks>
             A list of vocabularies that can be used to code the units may be found 
             in the measurement-unit-sets vocabulary.
             </remarks>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="value"/> is <b>null</b>.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Value">
             <summary>
             Gets or sets value.  
             </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TestResultRange">
             <summary>
             A range related to a specific test result.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> 
            class with default values.
            </summary>
            
            <remarks>
            Each test result can contain multiple ranges that are useful 
            to interpret the result value. Examples include reference range 
            and therapeutic range.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="type"> 
            Type is the type of a test result.
            </param>
            
            <param name="text"> 
            Text is the range expressed as text. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="text"/> or <paramref name="type"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the test result range data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             The first node in <paramref name="navigator"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the test result range data to the specified XmlWriter.
             </summary> 
             
             <param name="nodeName">
             The name of the node to write XML.
             </param>
             
             <param name="writer">
             The XmlWriter to write the test result range data to.
             </param>
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> is <b> null </b> or empty.
             </exception>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b> null </b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="T:System.Type"/> or <see cref="P:Microsoft.Health.ItemTypes.TestResultRange.Text"/> is <b> null </b>.
             </exception> 
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.ToString">
             <summary>
             Gets a string representation of the test result range item.
             </summary> 
            
             <returns>
             A string representation of the test result range item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.Value">
            <summary>
            Gets or sets the minimum and maximum of the range.
            </summary>
            
            <remarks>
            The minimum or maximum value may be omitted to specify open-ended ranges. 
            Example:
            The range "greater than 3.5" would be coded by setting the minimum to 3.5 and omitting the maximum.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.RangeType">
            <summary>
            Gets or sets the type of the range.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="RangeType"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.Text">
            <summary>
            Gets or sets the range expressed as text.
            </summary>
            <remarks>
            The text element is used in two different ways:
            When a numeric range is used, the text element should contain a textual version of the
            numeric range. 
            When the range is non-numeric, the text element contains the range and the range value is omitted. The range may
            also be coded to a vocabulary.
            
            Examples:
            A color range (such as clear to yellow) would be coded using by setting the text element to "clear to yellow",
            and by assigning a code from an appropriate vocabulary.
            
            A numeric range (such as 0.5 - 1.6) would be stored in the minimum and maximum elements of the value, and \
            additionally would be coded by setting the text element to "0.5 - 1.6".
            
            Contact the HealthVault team to help define this vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Text"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TestResultRangeValue">
            <summary>
            Represents a lab test result range value.
            </summary>
            
            <remarks>
            A range consists of minimum and/or maximum values.
            An open-ended range may be created by omitting the minimum or maximum value.
            
            For example, "greater than 3.5" is created by setting the minimum value to 3.5 and
            the maximum value to null. 
            </remarks>
            
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.#ctor">
            <summary>
            Creates a new instance of the LabTestResultRangeValue class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the range from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the range.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the range data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the range data.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the range data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.ToString">
             <summary>
             Gets a string representation of the test result range value.
             </summary> 
            
             <returns>
             A string representation of the test result range value item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRangeValue.Minimum">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            
            <value>
            A value of type double? that represents the minimum value of the range.
            </value>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRangeValue.Maximum">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            
            <value>
            A value of type double? that represents the maximum value of the range.
            </value>
        </member>
    </members>
</doc>
