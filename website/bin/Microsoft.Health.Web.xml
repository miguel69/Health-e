<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Health.Web</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Health.Web.ActionTemplate">
            <summary> our template for building action links </summary>
        </member>
        <member name="M:Microsoft.Health.Web.ActionTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Defines the Control object that child controls and templates belong
            to. These child controls are in turn defined within an inline
            template.
            </summary>
            
            <param name="container">
            The <see cref="T:System.Web.UI.Control"/> object to contain the instances of the 
            controls from the inline template.
            </param>
            
        </member>
        <member name="T:Microsoft.Health.Web.GridViewAuditActionTemplate">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TemplateField"/> implementation used on the 
            <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/> to transform audit actions into
            readable strings.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.GridViewAuditActionTemplate.#ctor(Microsoft.Health.Web.TemplateType,System.String,System.String)">
            <summary>
            Constructs a GridViewAuditActionTemplate with the specified
            template type, column name, and header text.
            </summary>
            
            <param name="type">
            Tells the template which type of a controls should be added to the
            container based on the health record item type.
            </param>
            
            <param name="columnName">
            The name of the column the template applies to.
            </param>
            
            <param name="headerText">
            The header text of the column.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.GridViewAuditActionTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Defines the Control object that child controls and templates belong
            to. These child controls are in turn defined within an inline
            template.
            </summary>
            
            <param name="container">
            The <see cref="T:System.Web.UI.Control"/> object to contain the instances of the 
            controls from the inline template.
            </param>
            
        </member>
        <member name="T:Microsoft.Health.Web.GridViewIsSignedTemplate">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TemplateField"/> implementation used on the 
            <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/> to override Signed column.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.GridViewIsSignedTemplate.#ctor(Microsoft.Health.Web.TemplateType,System.String,System.String,System.String)">
             <summary>
             Constructs a GridViewIsSignedTemplate with the specified
             template type, column name, header text and the column value override.
             </summary>
             
             <param name="type">
             Tells the template which type of a controls should be added to the
             container based on the health record item type.
             </param>
             
             <param name="columnName">
             The name of the column the template applies to.
             </param>
             
             <param name="headerText">
             The header text of the column.
             </param>
             
             <param name="isSignedOverride">
             The override value of the column.
             </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.GridViewIsSignedTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Defines the Control object that child controls and templates belong
            to. These child controls are in turn defined within an inline
            template.
            </summary>
            
            <param name="container">
            The <see cref="T:System.Web.UI.Control"/> object to contain the instances of the 
            controls from the inline template.
            </param>
            
        </member>
        <member name="T:Microsoft.Health.Web.HealthRecordItemDataGrid">
            <summary>
            An ASP.NET server control for viewing health record items.
            </summary>
            
            <remarks>
            The HealthRecordItemDataGrid works with the 
            <see cref="T:Microsoft.Health.HealthRecordItemDataTable"/> to show a 
            paged list of the health record items matching the specified
            search criteria.<br/>
            <br/>
            This control can only be used inside a <see cref="T:Microsoft.Health.Web.HealthServicePage"/>.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.#ctor">
            <summary>
            Constructs a HealthRecordItemDataGrid instance with default values.
            </summary>
            
            <remarks>
            It is usually not necessary to explicitly instantiate the data
            grid. Instead, specify the grid in an .aspx file.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.OnPreRender(System.EventArgs)">
            <summary>
            Overrides the base class OnPreRender to populate the data from
            HealthVault.
            </summary>
            
            <param name="e">
            The event arguments.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.CreateChildControls">
            <summary>
            Called by the ASP.NET page to notify server controls that use
            composition-based implementation to create any child controls they 
            contain in preparation for posting back or rendering.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.HandleAction(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary> 
            The default event handler for the server-side action event.
            </summary>
            
            <param name="sender">
            The source of the event.
            </param>
            
            <param name="e">
            A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> that
            contains the event data.
            </param>
            
            <remarks>
            This method handles the built-in actions like "_wcDelete" and then
            passes on any unknown commands to the <see cref="E:Microsoft.Health.Web.HealthRecordItemDataGrid.Action"/>
            event handler.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML for the HealthRecordItemDataGrid.
            </summary>
            
            <remarks>
            The control consists of 3 main elements:
            <div class="CssClass">
               <div>
                  <table>GridView</table>
               </div>
               <div>Error Message</div>
            </div>
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.PopulateGridView">
            <summary>
            Populates the encapsulated GridView by building the search filters
            or use the FilterOverride to get health record information.
            </summary>
            
            <remarks>
            To get information on results returned, look at the 
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.IsFiltered"/> and <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ResultCount"/>
            properties.
            </remarks>
            
            <exception cref="T:System.InvalidOperationException">
            If the <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/> instance is placed in
            a page not deriving from <see cref="T:Microsoft.Health.Web.HealthServicePage"/>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthRecordItemDataGrid.BuildFilterFromParams">
            <summary>
            Builds the filter used to populate the data grid. The filter is 
            generated by looking at the TypeIds.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.HealthRecordFilter"/> that is used 
            by the underlying 
            <see cref="T:Microsoft.Health.HealthRecordItemDataTable"/>
            to retrieve data for the data grid.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.JavaScriptRowEventHandler">
            <summary>
            Gets or sets n event handler that gets fired when an event occurs 
            within a row of the data grid.
            </summary>
            
            <remarks>
            The JavaScript row event handler should be in the form of:
            function Foo(thingId, thingTypeId, thingVersion, eventType, row, event)
            thingId = the Id of the thing
            thingTypeId = the type id of the thing type
            thingVersion = the version stamp of the thing type
            eventType = onmouseover, onmouseout, onclick
            row = the row index that the event occurred on.
            event = javascript event 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionHeaderText">
            <summary> 
            Gets or sets the header text for the action links column.
            </summary>
            
            <remarks> 
            This value is ignored unless <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels"/> and
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands"/> are also set.<br/>
            <br/>
            Actions are server-side events that can be configured through
            attributes of the HealthRecordItemDataGrid element in an aspx
            file. Actions consist of text which gets displayed as a link,
            a command identifier, and an action event handler to call to
            handle the action when clicked. When an action is specified a
            column is automatically added to the data grid and the action
            link is added to the column.<br/>
            <br/>
            The ActionHeaderText is the text used for the column that is
            automatically added.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionSpacer">
            <summary> 
            Gets or sets the action links separator.
            </summary>
            
            <remarks> 
            This value is ignored unless <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels"/> and
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands"/> are also set.<br/>
            <br/>
            Actions are server-side events that can be configured through
            attributes of the HealthRecordItemDataGrid element in an aspx
            file. Actions consist of text which gets displayed as a link,
            a command identifier, and an action event handler to call to
            handle the action when clicked. When an action is specified a
            column is automatically added to the data grid and the action
            link is added to the column.<br/>
            <br/>
            The ActionSpacer is the HTML used to separate multiple actions
            in the added column. The default value is a single space.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels">
            <summary> 
            Gets or sets the action link text.
            </summary>
            
            <remarks> 
            This value is ignored unless 
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands"/> is also set.<br/>
            <br/>
            Actions are server-side events that can be configured through
            attributes of the HealthRecordItemDataGrid element in an aspx
            file. Actions consist of text which gets displayed as a link,
            a command identifier, and an action event handler to call to
            handle the action when clicked. When an action is specified a
            column is automatically added to the data grid and the action
            link is added to the column.<br/>
            <br/>
            The ActionLabels is a comma separated list that must have the same
            number of values as the <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands"/> property.
            Each label corresponds to the command at the same index in the
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands"/> property.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionCommands">
            <summary> 
            Gets or sets the action commands.
            </summary>
            
            <remarks> 
            This value is ignored unless 
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels"/> is also set.<br/>
            <br/>
            Actions are server-side events that can be configured through
            attributes of the HealthRecordItemDataGrid element in an aspx
            file. Actions consist of text which gets displayed as a link,
            a command identifier, and an action event handler to call to
            handle the action when clicked. When an action is specified a
            column is automatically added to the data grid and the action
            link is added to the column.<br/>
            <br/>
            The ActionCommands is a comma separated list that must have the same
            number of values as the <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels"/> property.
            Each command corresponds to the label at the same index in the
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ActionLabels"/> property. When the action link is 
            clicked <see cref="E:Microsoft.Health.Web.HealthRecordItemDataGrid.Action"/> event is fired with the action command
            as an argument.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.OnClientAction">
            <summary> 
            The event handler for client-side action events.
            </summary>
            
            <remarks> 
            If present, this javascript function is called when action links
            are clicked before the server-side <see cref="E:Microsoft.Health.Web.HealthRecordItemDataGrid.Action"/> 
            handler.<br/>
            <br/>
            The function should return true to proceed, or false to abort
            calling the server-side handler.<br/>
            <br/>
            prototype is handler(event, action, thing_key)<br/>
            <ul>
            <li>event = javascript event</li>
            <li>action = action command that was clicked</li>
            <li>key = thing id and version stamp, comma-separated</li>
            </ul>
            </remarks>
            
        </member>
        <member name="E:Microsoft.Health.Web.HealthRecordItemDataGrid.Action">
            <summary> 
            The event handler for the server-side action event.
            </summary>
            
            <remarks>
            The Action event is fired in response to an action link being
            clicked. The Action event can be handled by associating a method
            with the Action property in the HealthRecordItemDataGrid element
            in the aspx page.<br/>
            <br/>
            The action command is passed to the event handler as a parameter.
            </remarks>
            
        </member>
        <member name="E:Microsoft.Health.Web.HealthRecordItemDataGrid.FinalPreRender">
             <summary> 
             The event handler for a "last chance" look at the grid before
             it is rendered.
             </summary>
             
             <remarks>
             This event is fired just before rendering. The grid is full and
             all actions are complete.<br/>
             <br/>
             Note that using this event requires looking directly into the 
             contents of the control! This is not guaranteed to be supported
             in future versions of the SDK and therefore you should use it
             at your own risk.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.FilterOverride">
            <summary> 
            Gets or sets the filter to use to get information from the
            health record.
            </summary>
            
            <remarks>
            The data grid can either show health record items of specific
            types specified by the <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.TypeIds"/> property or by
            specifying a specific filter.<br/>
            <br/>
            If this property is set the <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.TypeIds"/> property will
            be ignored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.TypeIds">
            <summary>
            Gets or sets the unique type identifier for the health record
            items to show in the data grid.
            </summary>
            
            <remarks>
            The data grid can either show health record items of specific
            types or by specifying a more detailed filter in the 
            <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.FilterOverride"/> property.<br/>
            <br/>
            If the <see cref="P:Microsoft.Health.Web.HealthRecordItemDataGrid.FilterOverride"/> property is set, this property
            is ignored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.Record">
            <summary>
            Gets the HealthVault record to use.
            </summary>
            
            <remarks>
            If the value is <b>null</b> the property will attempt to use the page property of
            the control to obtain the selected record. This will only work if the page is derived
            from <see cref="T:Microsoft.Health.Web.HealthServicePage"/>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.IsFiltered">
            <summary>
            Gets a value that indicates whether the result data has been
            filtered by HealthVault.
            </summary>
            
            <remarks>
            To use this property, override the 
            <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)"/>, call the 
            base class implementation, and then check if the data was filtered.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.TableView">
            <summary> 
            Gets or sets the type of view the data table exposes through the
            data grid.
            </summary>
            
            <remarks>
            The default value is 
            <see cref="F:Microsoft.Health.HealthRecordItemDataTableView.Default"/>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.DataChanged">
            <summary> 
            Gets or sets a value which indicates to the data grid that data
            has changed and it should be refreshed.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ResultCount">
            <summary>
            Gets the number of results returned in the data grid.
            </summary>
            
            <remarks>
            To provide alternate UI when no results are returned, override
            the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)"/>, call the 
            base class implementation, and then check this property.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.VisibleColumns">
            <summary>
            The columns that should be shown in the data grid.
            </summary>
            
            <remarks>
            This is a comma separated list of the columns that should be shown
            in the data grid. If the value is "*" all data columns will be
            shown. If the value is null or empty, the display 
            columns defined for the specified item type are shown. 
            The default value is null.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.CssClass">
            <summary>
            Gets or sets the CSS class used for the control layout.
            </summary>
            
            <remarks>
            <div class="CssClass">
               <div>
                  <table>GridView</table>
               </div>
               <div>Error Message</div>
            </div>
            To control the way the controls look use CSS selector methods
            i.e. div.myClass div table tr td to access the td of the grid
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.AlternatingRowCssClass">
            <summary>
            Gets or sets the CSS class used for alternating row styles.
            </summary>
            
            <remarks>
            To have alternating row styles for the data grid, the styles
            need to be controlled by a separate CSS class and will be attached
            to the table rows on Render.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.CellPadding">
            <summary>
            Gets or sets the cell padding for the data grid. 
            </summary>
            
            <remarks>
            The default value is 0.<br/>
            This value must be set before <see cref="M:Microsoft.Health.Web.HealthRecordItemDataGrid.Render(System.Web.UI.HtmlTextWriter)"/> is called.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.CellSpacing">
            <summary>
            Gets or sets the cell spacing for the data grid.
            </summary>
            
            <remarks>
            The default value is 0.<br/>
            This value must be set before <see cref="M:Microsoft.Health.Web.HealthRecordItemDataGrid.Render(System.Web.UI.HtmlTextWriter)"/> is called.
            </remarks>
             
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.PageSize">
            <summary>
            Gets or sets the number or results that are shown per page.
            </summary>
            
            <remarks>
            This value can also be configured using a web.config setting 
            named "DataGrid_ItemsPerPage".<br/>
            This value must be set before <see cref="M:Microsoft.Health.Web.HealthRecordItemDataGrid.Render(System.Web.UI.HtmlTextWriter)"/> is called.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.PageIndex">
            <summary>
            Gets or sets the page index to be shown.
            </summary>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the PageIndex property is set to a value less than 0.
            </exception>
            
            <remarks>
            This value must be set before <see cref="M:Microsoft.Health.Web.HealthRecordItemDataGrid.Render(System.Web.UI.HtmlTextWriter)"/> is called.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ShowErrorMessages">
            <summary>
            Gets or sets a value that indicates whether the data grid should
            automatically show error messages when no results are found or
            when the results are filtered.
            </summary>
            
            <remarks>
            The default value is false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.GridViewClientId">
            <summary>
            Gets the client ID of the grid view portion of the control.
            </summary>
            
            <remarks>
            This is the ID of the &lt;table/&gt; element in the control so that
            it may be accessed using client side scripting or CSS.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ShowIsSignedColumn">
            <summary>
            Gets or sets a value which indicates to the data grid whether or not to show the 
            signed column if the column is defined for the specified item type.
            </summary>
            
            <remarks>
            The default value is false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.IsSignedColumnValueOverride">
            <summary>
            Gets or sets a value shown in the signed column if the column is defined for the 
            specified item type.
            </summary>
            
            <remarks>
            Instead of showing 'True' when item is signed, we could show an image by overriding
            the signed column value.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ShowIsPersonalFlag">
            <summary>
            Gets or sets a value which indicates to the data grid whether or not to show the 
            personal flag for items marked as personal.
            </summary>
            
            <remarks>
            The default value is false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ShowAuditColumns">
            <summary>
            Gets or sets a value which indicates to the data grid whether or not to show the 
            audit columns for items.
            </summary>
            
            <remarks>
            The default value is false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthRecordItemDataGrid.ShowActionLinks">
            <summary>
            Gets or sets a value which indicates to the data grid whether or not to show the 
            action links in each row.
            </summary>
            
            <remarks>
            The default value is true.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.Web.HealthServiceActionPage">
            <summary> 
            A redirector page to be used as the "action" page for Microsoft
            HealthVault applications.
            </summary>
            
            <remarks>
            All HealthVault applications are required to expose a set
            of URLs for information and functionality that they expose.
            For instance, all applications must expose a Service Agreement, 
            privacy statement, a home page, help, etc.<br/>
            <br/>
            This page acts as a simple redirector for these action pages such 
            that the application can easily configure these action pages through
            their web.config file.<br/>
            <br/>
            To use this page, create an action.aspx file at the URL that was 
            specified for the "action URL" when your application was registered.
            That action.aspx file should point to this class for it's 
            implementation. In your web.config file, add entries for each of the
            action URLs that your application supports using WCPage_Action as the
            prefix for the key. For example, for the Service Agreement action URL 
            create a setting in the web.config with key 
            WCPage_ActionServiceAgreement and value containing the URL to your 
            application Service Agreement.<br/>
            <br/>
            The page should also contain some text stating that the application
            doesn't support the particular action in case the redirect doesn't
            occur. The action that is being requested can be found in the
            <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.Action"/> property and the action query string can be found 
            the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/> property.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.Web.HealthServicePage">
            <summary> 
            A base page for ASP.NET applications building against HealthVault.
            </summary>
            
            <remarks>
            By deriving from this base page, ASP.NET applications can inherit 
            much of the data management capabilities that are needed to implement
            a HealthVault application. The base page handles redirecting to the
            HealthVault Shell to authenticate the user, getting information
            about the records the user is authorized to use, and serializing and
            making available to other pages the person's information and 
            self/selected record.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)">
            <summary>
            Initializes the page to use SSL if necessary.
            </summary>
            
            <remarks>
            This is called on init of every page. We handle the SSL 
            redirection at this point. Any page inheriting this class and
            wanting to be an insecure page must override this delegate 
            method and set the isSecure member variable to false before
            calling the parent init.
            </remarks>
            
            <param name="e">
            Event arguments for the Init event thrown
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.OnPreLoad(System.EventArgs)">
            <summary>
            Handles the PreLoad event for the page.
            </summary>
            
            <param name="e">
            Event arguments for the event.
            </param>
            
            <remarks>
            The base implementation calls <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)"/>
            and then calls the 
            <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)"/>.
            
            If a derived class overrides this method, it must call the base 
            implementation so that the user data gets initialized.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.InitializeUserData(System.Boolean)">
            <summary>
            Initializes the user data for the page. 
            </summary>
            
            <param name="logOnRequired"> 
            If true and the user hasn't already logged in to HealthVault, 
            the page will automatically redirect to the HealthVault logon page 
            and then return to this page with the auth-token.
            </param>
            
            <remarks>
            The base implementation of OnPreLoad will automatically call this
            method with the value specified in the <see cref="P:Microsoft.Health.Web.HealthServicePage.LogOnRequired"/>
            property. This method should only be called explicitly if there
            is a need to initialize the user data again after the page has
            been loaded.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.SetSelectedRecord(Microsoft.Health.HealthRecordInfo)">
            <summary> 
            Sets the selected health record for the application.
            </summary>
            
            <param name="activeRecord">
            The health record to set as the "active" record for the 
            application.
            </param>
            
            <remarks>
            By setting the selected record, the HealthVault page framework will
            ensure that every page of the application will have the same 
            record selected by serializing the record information into the
            session, and deserializing it for each page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RefreshAndPersist">
            <summary> 
            Cleans the application's session of HealthVault information and 
            then repopulates it.
            </summary>
            
            <exception cref="T:System.InvalidOperationException">
            If a person isn't logged on when this is called.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RefreshAndPersist(System.String)">
            <summary> 
            Cleans the application's session of HealthVault information and 
            then repopulates it using the specified authentication token.
            </summary>
            
            <param name="authToken">
            The authentication to use to populate the session with HealthVault
            information.
            </param>
            
            <exception cref="T:Microsoft.Health.HealthServiceException">
            If HealthVault returns an error when getting information
            about the person in the <paramref name="authToken"/>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RedirectToShellUrl(System.String,System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the queryString params 
            appended.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place. 
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RedirectToShellUrl(System.String,System.String,System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the queryString params 
            appended.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place. 
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters passed to the calling application action URL after the
            target action is completed in the Shell.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            The <paramref name="actionUrlQueryString"/> will be URL encoded and passed as the actionqs
            parameter value to the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RedirectToShellUrl(System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the query string params 
            appended.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.ConstructShellTargetUrl(System.String,System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.ConstructShellTargetUrl(System.String,System.String,System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters passed to the calling application action URL after the
            target action is completed in the Shell.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            The <paramref name="actionUrlQueryString"/> will be URL encoded and passed as the actionqs
            parameter value to the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.ConstructShellTargetUrl(System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.StripFromQueryString(System.String[])">
            <summary> 
            remove one variable from query string 
            </summary>
            
            <param name="keys"> 
            variable(s) to remove 
            </param>
            
            <returns> 
            original url without key 
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RedirectToLogOn(System.Boolean)">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, with 
            the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.RedirectToLogOn">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            back to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, 
            with the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.<br/>
            <br/>
            This overload assumes that the applications does not simultaneously
            deal with multiple records for the same person i.e. isMra is false.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.SignOut">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServicePage.SignOut(System.String)">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL with the specified querystring parameter if any.
            </summary>
            
            <param name="actionUrlQueryString">
            The query string parameters to pass to the signout action URL after
            cleaning up data.
            </param>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.LogOnRequired">
            <summary>
            True if the page requires the user to be logged in to HealthVault.
            </summary>
            
            <remarks>
            The default implementation returns true. For pages that don't 
            require logon, the page should override the property and return
            false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.IsMra">
            <summary>
            Gets a value indicating whether the page is for multi-record application.
            </summary>
            
            <remarks>
            By default the value is set to true. The default can be overridden on an application
            wide basis by setting the WCPage_IsMRA setting in the web.config file. The value can
            also be overridden on a per page basis by overriding this property in a derived class.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.ApplicationId">
            <summary>
            Gets or sets the unique application identifier.
            </summary>
            
            <remarks>
            By default the value is set to <see cref="P:Microsoft.Health.HealthApplicationConfiguration.ApplicationId"/>. If the
            application needs to change the application identifier it can set the value during
            <see cref="M:Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)"/>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.ApplicationAuthenticationCredential">
            <summary>
            Gets a credential used to authenticate the web application to
            HealthVault.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.ApplicationConnection">
            <summary>
            Gets a HealthVault connection authenticated at tier 1.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ApplicationConnection"/> connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created and returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.AuthenticatedConnection">
            <summary>
            Gets a HealthVault connection authenticated at tier 3.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.Web.WebApplicationConnection"/> 
            connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created and returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            If a person has not been logged in.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.DictionaryConnection">
            <summary>
            Gets a HealthVault connection without an authentication token.
            </summary>
            
            <returns>
            A <see cref="P:Microsoft.Health.Web.HealthServicePage.ApplicationConnection"/> connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created a returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.AnonymousConnection">
            <summary>
            Gets a HealthVault connection without an authentication token.
            </summary>
            
            <returns>
            A connection to HealthVault that does not contain user
            authentication information.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created a returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.PersonInfo">
            <summary> 
            Gets information about the logged-in person.
            </summary>
            
            <value>
            Information about the logged-in person or null if not logged-in.
            </value>
            
            <remarks>
            This information is a mirror of the 
            <see cref="T:Microsoft.Health.PersonInfo"/> class and is used to 
            serialize information to and from the session.<br/>
            <br/>
            PersonInfo should never be set to null. If the application wants
            to log off the user, call <see cref="M:Microsoft.Health.Web.HealthServicePage.SignOut(System.String)"/>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.IsLoggedIn">
            <summary>
            Gets whether a person is logged-in or not.
            </summary>
            
            <value>
            True if a person is logged-in, or false otherwise.
            </value>
            
            <remarks>
            The page handles logon automatically if the 
            <see cref="P:Microsoft.Health.Web.HealthServicePage.LogOnRequired"/> is set to true.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.IsPageSslSecure">
            <summary>
            Gets a value indicating whether a page wants to use SSL for 
            security.
            </summary>
            
            <remarks>
            Used to indicate if a page wants to use SSL for security. 
            By default this property returns true as every page is assumed
            to use SSL when allowed. However individual pages can choose not 
            to use SSL by overriding it and making it return false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServicePage.CurrentPage">
            <summary>
            Gets the current page as a HealthServicePage.
            </summary>
            
            <remarks>
            This property can be used to retrieve an instance of the page from
            objects that don't have a reference to the page.
            The property accesses the <see cref="T:System.Web.HttpContext"/> to retrieve
            the page and casts it to a HealthServicePage. If the page is not
            a HealthServicePage or the page hasn't been instantiated, null 
            is returned.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Reads the target from the query string calls the appropriate virtual method to 
            perform the action.
            </summary>
            
            <param name="sender">
            The sender of the message.
            </param>
            
            <param name="e">
            The arguments of the message.
            </param>
            
            <remarks>
            In most cases the action performed is to redirect the user's browser to a URL defined
            by the web.config file or if that isn't defined and the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>
            is a URL to that URL instead.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionHome(System.String,System.String)">
            <summary>
            Redirects to the application's home page using the WCPage_ActionHome configuration
            value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "HOME".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionServiceAgreement(System.String,System.String)">
            <summary>
            Redirects to the application's service agreement page using the 
            WCPage_ActionServiceAgreement configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "SERVICEAGREEMENT".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionHelp(System.String,System.String)">
            <summary>
            Redirects to the application's help page using the 
            WCPage_ActionHelp configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "HELP".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionApplicationAuthorizationRejected(System.String,System.String)">
            <summary>
            Redirects to the application's authorization page using the 
            WCPage_ActionAppAuthReject configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "APPAUTHREJECT".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionApplicationAuthorizationSuccessful(System.String,System.String)">
            <summary>
            Redirects to the application's authorization page using the 
            WCPage_ActionAppAuthSuccess configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "APPAUTHSUCCESS".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionApplicationAuthorizationFailed(System.String,System.String)">
            <summary>
            Redirects to the application's authorization page using the 
            WCPage_ActionAppAuthFailure configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "APPAUTHFAILURE".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionApplicationAuthorizationInvalidRecord(System.String,System.String)">
            <summary>
            Redirects to the application's authorization page using the 
            WCPage_ActionAppAuthInvalidRecord configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "APPAUTHINVALIDRECORD".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionCreateRecordFailure(System.String,System.String)">
            <summary>
            Redirects to the application's record management page using the 
            WCPage_ActionCreateRecordFailure configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "CREATERECORDFAILURE".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionCreateRecordCanceled(System.String,System.String)">
            <summary>
            Redirects to the application's record management page using the 
            WCPage_ActionCreateRecordCanceled configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "CREATERECORDCANCELED".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionSelectedRecordChanged(System.String,System.String)">
            <summary>
            Redirects to the application's record management page using the 
            WCPage_ActionSelectedRecordChanged configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "SELECTEDRECORDCHANGED".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method refreshes the user's cookie by calling
            <see cref="M:Microsoft.Health.Web.HealthServicePage.RefreshAndPersist"/> and then calls 
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to redirect to the URL defined by the web.config file 
            or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>. To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionShareRecordSucceeded(System.String,System.String)">
            <summary>
            Redirects to the application's record management page using the 
            WCPage_ActionShareRecordSuccess configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "SHARERECORDSUCCESS".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionShareRecordFailed(System.String,System.String)">
            <summary>
            Redirects to the application's record management page using the 
            WCPage_ActionShareRecordFailed configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "SHARERECORDFAILED".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionPrivacy(System.String,System.String)">
            <summary>
            Redirects to the application's privacy page using the 
            WCPage_ActionPrivacy configuration value in the web.config.
            </summary>
            
            <param name="action">
            Should always be "PRIVACY".
            </param>
            
            <param name="actionQueryString">
            The value of the "actionqs" query string parameter.
            </param>
            
            <remarks>
            The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
            redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
            To change this behavior the 
            application can override this method and provide a different implementation.
            <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
            if needed.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionSignOut(System.String,System.String)">
             <summary>
             Redirects to the application's signout page using the 
             WCPage_ActionSignOut configuration value in the web.config.
             </summary>
             
             <param name="action">
             Should always be "SIGNOUT".
             </param>
             
             <param name="actionQueryString">
             The value of the "actionqs" query string parameter.
             </param>
             
             <remarks>
             The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
             redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
             To change this behavior the 
             application can override this method and provide a different implementation.
             <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
             if needed.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionReconcileSuccess(System.String,System.String)">
             <summary>
             Redirects to the application's clinical document page using the 
             WCPage_ActionReconcileSuccess configuration value in the web.config.
             </summary>
             
             <remarks>
             Deprecated.  This handler is no longer used.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionReconcileComplete(System.String,System.String)">
             <summary>
             Redirects to the application's clinical document page using the 
             WCPage_ActionReconcileSuccess configuration value in the web.config.
             </summary>
             
             <param name="action">
             Should always be "RECONCILECOMPLETE".
             </param>
             
             <param name="actionQueryString">
             The value of the "actionqs" query string parameter.
             </param>
             
             <remarks>
             The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
             redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
             To change this behavior the 
             application can override this method and provide a different implementation.
             <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
             if needed.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionReconcileFailure(System.String,System.String)">
             <summary>
             Redirects to the application's clinical document page using the 
             WCPage_ActionReconcileFailure configuration value in the web.config.
             </summary>
             
             <param name="action">
             Should always be "RECONCILEFAILURE".
             </param>
             
             <param name="actionQueryString">
             The value of the "actionqs" query string parameter.
             </param>
             
             <remarks>
             The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
             redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
             To change this behavior the 
             application can override this method and provide a different implementation.
             <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
             if needed.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionReconcileCanceled(System.String,System.String)">
             <summary>
             Redirects to the application's clinical document page using the 
             WCPage_ActionReconcileCanceled configuration value in the web.config.
             </summary>
             
             <param name="action">
             Should always be "RECONCILECANCELED".
             </param>
             
             <param name="actionQueryString">
             The value of the "actionqs" query string parameter.
             </param>
             
             <remarks>
             The default implementation of this method calls <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)"/> to 
             redirect to the URL defined by the web.config file or the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/>.
             To change this behavior the 
             application can override this method and provide a different implementation.
             <see cref="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)"/> can be called to get the URL from the web.config file
             if needed.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.OnActionUnknown(System.String,System.String)">
            <summary>
            Redirects to the specified action page if specified in the web.config file.
            </summary>
            
            <param name="action">
            The action that is being redirected to.
            </param>
            
            <param name="actionQueryString">
            The action query string parameters to pass on to the action page.
            </param>
            
            <remarks>
            If the target action specified to the action page is not one of the recognized actions
            it can still be handled by the application by specifying a URL to redirect to in the
            web.config file. If the web.config file doesn't have a redirect URL for the action and
            the <see cref="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString"/> contains only a URL, the user's browser will be 
            directed to that URL instead. The key should be WCPage_Action with the action name 
            appended. For example, WCPage_ActionAppAuthSuccess can be used to specify a URL for 
            the AppAuthSuccess action.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthServiceActionPage.GetTargetLocation(System.String,System.String)">
            <summary>
            Gets the URL of the location and the query string for the
            specified action.
            </summary>
            
            <param name="action">
            The action identifier used to tell the application which
            action page should be shown.
            </param>
            
            <param name="actionQueryString">
            The query string parameters that should be passed to the
            target action URL.
            </param>
            
            <returns>
            The full URL including query string of the action page to
            redirect to.
            </returns>
            
            <remarks>
            The default implementation reads the action URL from the
            web.config file using the key "WCPage_Action" + 
            <paramref name="action"/>.<br/>
            <br/>
            The currently supported actions are:
            <ul>
                <li>Home</li>
                <li>ServiceAgreement</li>
                <li>Help</li>
                <li>AppAuthSuccess</li>
                <li>AppAuthFailure</li>
                <li>AppAuthReject</li>
                <li>AppAuthInvalidRecord</li>
                <li>CreateRecordFailure</li>
                <li>CreateRecordCanceled</li>
                <li>ReconcileComplete</li>
                <li>ReconcileFailure</li>
                <li>ReconcileCanceled</li>
                <li>SelectedRecordChanged</li>
                <li>SignOut</li>
                <li>ShareRecordSuccess</li>
                <li>ShareRecordFailed</li>
                <li>Privacy</li>
            </ul>
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServiceActionPage.Action">
            <summary>
            Gets the action that was specified in the query string.
            </summary>
            
            <remarks>
            The currently supported actions are:
            <ul>
                <li>Home</li>
                <li>ServiceAgreement</li>
                <li>Help</li>
                <li>AppAuthSuccess</li>
                <li>AppAuthFailure</li>
                <li>AppAuthReject</li>
                <li>AppAuthInvalidRecord</li>
                <li>CreateRecordFailure</li>
                <li>CreateRecordCanceled</li>
                <li>ReconcileComplete</li>
                <li>ReconcileFailure</li>
                <li>ReconcileCanceled</li>
                <li>SelectedRecordChanged</li>
                <li>SignOut</li>
                <li>ShareRecordSuccess</li>
                <li>ShareRecordFailed</li>
                <li>Privacy</li>
            </ul>
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServiceActionPage.ActionQueryString">
            <summary>
            Gets the "actionqs" query string parameter that was specified on the request.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthServiceActionPage.LogOnRequired">
            <summary>
            The action page does not require log on.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.Web.HealthWebApplicationConfiguration">
            <summary>
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.HealthWebApplicationConfiguration.GetActionUrl(System.String)">
            <summary>
            Gets the URL of the page corresponding to the action.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_Action*" configuration
            values.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.Current">
            <summary>
            Gets or sets the current configuration object for the app-domain.
            </summary>
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.DataGridItemsPerPage">
            <summary>
            Gets the number of items that are shown per page when using the 
            <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/>.
            </summary>
            
            <remarks>
            This property corresponds to the "DataGrid_ItemsPerPage" configuration
            value. The value defaults to 20.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.IsMultipleRecordApplication">
            <summary>
            Gets a value indicating whether the application works with multiple records
            at one time or just one.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_IsMRA" configuration
            value. The value defaults to false.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.UseAspSession">
            <summary>
            Gets a value indicating whether the HealthVault token should be stored
            in the ASP.NET session rather than a cookie.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_UseAspSession" configuration
            value. The value defaults to "false".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.UseSslForSecurity">
            <summary>
            Gets a value indicating whether <see cref="T:Microsoft.Health.Web.HealthServicePage"/> should automatically
            redirect to SSL ports when reached through an unsecured port.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_SSLForSecure" configuration
            value. The value defaults to "true".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.CookieName">
            <summary>
            Gets the name to use for the cookie which stores login information for the 
            user.
            </summary>
            
            <remarks>
            The value defaults to <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath"/> + "_wcpage".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.CookieEncryptionKey">
            <summary>
            Gets the key used to encrypt the cookie.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_CookieEncryptionKey" configuration
            value.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.MaxCookieTimeoutMinutes">
            <summary>
            Gets the maximum time a cookie will be stored.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_MaxCookieTimeoutMinutes" configuration
            value. The value defaults to 129600 (90 days).
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.CookieTimeoutMinutes">
            <summary>
            Gets the time a cookie will be stored.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_CookieTimeoutMinutes" configuration
            value. The value defaults to 20.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.CookieDomain">
            <summary>
            Gets the domain that will be used for the cookie.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_CookieDomain" configuration
            value. The value defaults to "".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.CookiePath">
            <summary>
            Gets the path to be used for the cookie.
            </summary>
            
            <remarks>
            This property corresponds to the "WCPage_CookiePath" configuration
            value. The value defaults to "".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.ActionUrlRedirectOverride">
            <summary>
            Gets a URL to use in place of the action URL in testing environments.
            </summary>
            
            <remarks>
            This property corresponds to the "NonProductionActionUrlRedirectOverride" configuration
            value. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.SecureHttpScheme">
            <summary>
            Gets the scheme to use for secure HTTP addresses.
            </summary>
            
            <remarks>
            Defaults to "https://".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.InsecureHttpScheme">
            <summary>
            Gets the scheme to use for insecure HTTP addresses.
            </summary>
            
            <remarks>
            Defaults to "http://".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.IsSignupCodeRequired">
            <summary>
            Gets a value indicating whether a signup code is required when a user
            signs up for a HealthVault account.
            </summary>
            
            <remarks>
            A signup code is only required under certain conditions. For instance,
            the account is being created from outside the United States.
            This property corresponds to the "WCPage_IsSignupCodeRequired" configuration
            value. The value defaults to "false".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.HealthWebApplicationConfiguration.HealthVaultShellAuthenticationUrl">
            <summary>
            Gets the URL of the HealthVault Shell authentication page.
            </summary>
            
            <remarks>
            This property uses the "ShellUrl" configuration value to construct the
            redirector URL with a target of "AUTH".
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.Web.TemplateType">
            <summary>
            Indicates the type of the audit action template being used for a
            <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/>.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.TemplateType.Header">
            <summary>
            The template is being used as a header.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.TemplateType.Item">
            <summary>
            The template is being used for an item.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.Web.WebApplicationConfiguration">
            <summary> 
            Contains the application configuration as retrieved from 
            web.config or as constants.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.LogOnRequired">
            <summary> 
            Constant to indicate logon required
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.NoLogOnRequired">
            <summary> 
            Constant to indicate logon not required 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationConfiguration.GetConfigValue(System.String)">
            <summary>
            This returns a good configuration value for the key supplied. If 
            the configuration value is missing in the settings,
            a HealthServiceException is thrown.
            </summary>
            
            <param name="key">
            The configuration key for which the value is to be obtained.
            </param>
            
            <returns>
            A non-null string representing the value of the config key.
            </returns>
            
            <exception cref="T:Microsoft.Health.HealthServiceException">
            If the value for the config key is missing in the app settings.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationConfiguration.#ctor">
            <summary>
            This ensures that no default public ctor is constructed by the
            compiler.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.CookieName">
            <summary>
            The name of the cookie for use by applications and the base
            HealthServicePage to store authentication information.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.AppId">
            <summary>
            Application id, from web config.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.CookieDomain">
            <summary>
            Cookie domain, from web config.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.CookiePath">
            <Summary>
            Cookie path, from web config.
            </Summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.CookieTimeoutMinutes">
            <summary>
            Cookie timeout in minutes, from web config.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.MaxCookieTimeoutMinutes">
            <summary>
            The maximum cookie timeout in minutes, from web config.
            </summary>
            
            <remarks>
            The cookie timeout is defaulted in the web config but the 
            application configuration in HealthVault can allow for persistent
            tokens which require a longer cookie life. The cookie will take
            on the life of the token when the page receives a "tokenTtl" 
            query string parameter when receiving the authentication token.
            The MaxCookieTimeoutMinutes limits the cookie timeout to a 
            maximum value even when the CookieTimeoutMinutes or the token TTL
            from the applications configuration is larger.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.CookieEncryptionKey">
            <summary>
            The 32 byte key used to encrypt cookies for privacy.
            </summary>
            <remarks>
            The cookie encryption key is an optional string consisting of 32 hex digits (0-F).
            When a key is assigned to an application, any existing unencrypted cookies are still readable.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.UseSslForSecurity">
            <summary>
            Whether to secure the connection with SSL, from web config.
            </summary>
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.UseAspSession">
            <summary>
            Use the asp session rather than a cookie, from web config.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.IsMra">
            <summary>
            If true, the application is a multi-record application.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.Web.WebApplicationConfiguration.IsSignupCodeRequired">
            <summary>
            Indicates whether a signup code is required for a user to create
            a HealthVault account.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationConfiguration.GetActionUrl(System.String)">
            <summary>
            Gets the URL for the specified application action.
            </summary>
            
            <param name="action">
            The action to get the URL for.
            </param>
            
            <returns>
            The URL the application configured for the specified action.
            </returns>
            
            <remarks>
            Applications that use the <see cref="T:Microsoft.Health.Web.HealthServiceActionPage"/>
            can configure URLs for each action in the web.config file. They
            should have a key prefix of "WCPage_Action" with the action name
            appended. For example, for a the EULA action page, the 
            web.config should contain a key of WCPage_ActionEula with a 
            value containing the URL of the EULA page.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.ShellAuthenticationUrl">
            <summary>
            Shell auth page location including the application id.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.ShellUrl">
            <summary>
            Shell url, from web config.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceUrl">
            <summary>
            HealthVault url, from web config.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceRootUrl">
            <summary>
            HealthVault root url, from web config.
            </summary>
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.ShellRedirectorUrl">
            <summary>
            Shell redirector url, derived from web config.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.HealthServiceHandlerUrl">
            <summary>
            HealthVault handler url, derived from web config.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.ActionUrlRedirectOverride">
            <summary>
            Non-production action url redirect override.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationConfiguration.DataGridItemsPerPage">
            <summary>
            Gets the configured number of items that should be shown for a
            <see cref="T:Microsoft.Health.Web.HealthRecordItemDataGrid"/> page.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.Web.WebApplicationUtilities">
            <summary> 
            A collection of utility functions to help HealthVault web application developers 
            authenticate and perform other actions with HealthVault.
            </summary>
            
            <remarks>
            If possible, it is recommended that HealthVault applications derive from
            <see cref="T:Microsoft.Health.Web.HealthServicePage"/>. If the requirements for the application don't allow for
            derivation due to deriving from another base class or needing access from control classes,
            the static utility methods in this class give the developer access to the same functionality
            that is available in the <see cref="T:Microsoft.Health.Web.HealthServicePage"/>.
            <br/><br/>
            Methods like <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)"/> and 
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)"/> should be called from
            the application's page <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)"/> and 
            <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)"/> methods respectively.
            <br/><br/>
            Other methods help the application with management of the HealthVault cookie. For instance,
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)"/> reads the HealthVault cookie from the request and
            instantiates the <see cref="T:Microsoft.Health.PersonInfo"/> instance for the logged in person. Note, some
            methods like <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)"/> require another method be called first
            to handle the user's authentication token. Methods like 
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)"/> and 
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)"/> deal with storing the HealthVault user information in a 
            cookie or session.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnInit(System.Web.HttpContext,System.Boolean)">
            <summary>
            Replicates the <see cref="M:Microsoft.Health.Web.HealthServicePage.OnInit(System.EventArgs)"/> behavior by redirecting to a 
            secure version of the page if the URL requested is insecure and the application requires
            a secure connection.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="isPageSslSecure">
            If true, the application requires all connections to this page be over a secure SSL
            channel.
            </param>
            
            <remarks>
            Applications can require certain pages (or all pages) to be accessed only over a secure
            SSL channel. To do this the application must set the "WCPage_SSLForSecure" config value
            in the web.config file and pass "true" to <paramref name="isPageSslSecure"/>.
            <br/><br/>
            If the conditions above are true the user's browser will automatically be redirected
            to a secure version of the page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetSSLRedirectURL(System.Web.HttpRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
            
            <remarks>
            This is usually called during page initialization (<see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)"/>).
            If a <see cref="T:System.Uri"/> is returned then the user should be redirected to the
            specified URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)">
            <summary>
            Ensures that the person is logged on if <paramref name="logOnRequired"/> is true.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="logOnRequired">
            True if the requested page requires the user to be logged on to HealthVault, or false
            otherwise. If true and the user isn't logged on, the user's browser will be automatically
            redirected to the HealthVault authentication page.
            </param>
            
            <remarks>
            It is recommended that HealthVault applications that cannot derive from 
            <see cref="T:Microsoft.Health.Web.HealthServicePage"/> call this method during their pages OnPreLoad. This
            method will ensure that the HealthVault token is extracted from the URL query string,
            the authenticated person's <see cref="T:Microsoft.Health.PersonInfo"/> is retrieved and stored in a cookie.
            This will make the person's information available through the cookie on all future 
            requests until they log off.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Guid)">
            <summary>
            Ensures that the person is logged on if <paramref name="logOnRequired"/> is true.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="logOnRequired">
            True if the requested page requires the user to be logged on to HealthVault, or false
            otherwise. If true and the user isn't logged on, the user's browser will be automatically
            redirected to the HealthVault authentication page.
            </param>
            
            <param name="appId">
            The unique application identifier.
            </param>
            
            <remarks>
            It is recommended that HealthVault applications that cannot derive from 
            <see cref="T:Microsoft.Health.Web.HealthServicePage"/> call this method during their pages OnPreLoad. This
            method will ensure that the HealthVault token is extracted from the URL query string,
            the authenticated person's <see cref="T:Microsoft.Health.PersonInfo"/> is retrieved and stored in a cookie.
            This will make the person's information available through the cookie on all future 
            requests until they log off.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)">
            <summary>
            Ensures that the person is logged on if <paramref name="logOnRequired"/> is true.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="logOnRequired">
            True if the requested page requires the user to be logged on to HealthVault, or false
            otherwise. If true and the user isn't logged on, the user's browser will be automatically
            redirected to the HealthVault authentication page.
            </param>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <remarks>
            It is recommended that HealthVault applications that cannot derive from 
            <see cref="T:Microsoft.Health.Web.HealthServicePage"/> call this method during their pages OnPreLoad. This
            method will ensure that the HealthVault token is extracted from the URL query string,
            the authenticated person's <see cref="T:Microsoft.Health.PersonInfo"/> is retrieved and stored in a cookie.
            This will make the person's information available through the cookie on all future 
            requests until they log off.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean,System.Guid)">
            <summary>
            Ensures that the person is logged on if <paramref name="logOnRequired"/> is true.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="logOnRequired">
            True if the requested page requires the user to be logged on to HealthVault, or false
            otherwise. If true and the user isn't logged on, the user's browser will be automatically
            redirected to the HealthVault authentication page.
            </param>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <param name="appId">
            The unique identifier for the application.
            </param>
            
            <remarks>
            It is recommended that HealthVault applications that cannot derive from 
            <see cref="T:Microsoft.Health.Web.HealthServicePage"/> call this method during their pages OnPreLoad. This
            method will ensure that the HealthVault token is extracted from the URL query string,
            the authenticated person's <see cref="T:Microsoft.Health.PersonInfo"/> is retrieved and stored in a cookie.
            This will make the person's information available through the cookie on all future 
            requests until they log off.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationAuthenticationCredential(System.Guid)">
            <summary>
            Gets a credential used to authenticate the web application to
            Microsoft HealthVault.
            </summary>
            
            <param name="appId">
            The unique application identifier to get the credential for.
            </param>
            
            <returns>
            The application credential for the specified application.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetApplicationConnection(System.Guid)">
            <summary>
            Gets a HealthVault application connection without a user context.
            </summary>
            
            <param name="appId">
            The unique application identifier for the application to get the connection for.
            </param>
            
            <returns>
            A <see cref="T:Microsoft.Health.ApplicationConnection"/> connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created and returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetAuthenticatedConnection(System.Web.HttpContext)">
            <summary>
            Gets a HealthVault connection for the authenticated user.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.Web.WebApplicationConnection"/>.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created and returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            If a person has not been logged in.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)">
            <summary> 
            Cleans the application's session of HealthVault information and 
            then repopulates it.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="personInfo">
            The information about the authenticated person that needs refreshing.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If a person isn't logged on when this is called.
            </exception>
            
            <remarks>
            This method should be called anytime an action occurs that will affect the 
            <see cref="T:Microsoft.Health.PersonInfo"/> object for the authenticated person. This includes changing
            the person's authorization for the application or changing the selected record.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo)">
            <summary>
            Stores the specified person's information in the cookie.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="personInfo">
            The authenticated person's information.
            </param>
            
            <remarks>
            If <paramref name="personInfo"/> is null, this call will not clear the cookie.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RefreshAndSavePersonInfoToCookie(System.Web.HttpContext,System.String)">
            <summary> 
            Cleans the application's session of HealthVault information and 
            then repopulates it using the specified authentication token.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="authToken">
            The authentication to use to populate the session with HealthVault
            information.
            </param>
            
            <exception cref="T:Microsoft.Health.HealthServiceException">
            If HealthVault returns an error when getting information
            about the person in the <paramref name="authToken"/>.
            </exception>
            
            <remarks>
            This method should be called anytime the application takes a redirect from the 
            HealthVault shell and there is a WCToken on the query string. Note, if you are calling
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean,System.Boolean)"/> or 
            <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.PageOnPreLoad(System.Web.HttpContext,System.Boolean)"/> this is handled for you.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the queryString params 
            appended.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place. 
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the queryString params 
            appended.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place. 
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters passed to the calling application action URL after the
            target action is completed in the Shell.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            The <paramref name="actionUrlQueryString"/> will be URL encoded and passed as the actionqs
            parameter value to the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)">
            <summary>
            Redirects to the HealthVault Shell URL with the query string params 
            appended.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br />The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <param name="targetQuery">
            The query string value to pass to the URL to which redirection is 
            taking place.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters passed to the calling application action URL after the
            target action is completed in the Shell.
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            The <paramref name="targetQueryString"/> will be URL encoded and passed as the targetqs 
            parameter value to the redirector URL.
            The <paramref name="actionUrlQueryString"/> will be URL encoded and passed as the actionqs
            parameter value to the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.ConstructShellTargetUrl(System.Web.HttpContext,System.String)">
            <summary>
            Constructs a URL to be redirected to via the HealthVault URL 
            redirector.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="targetLocation">
            A known constant indicating the internal HealthVault 
            service Shell location to redirect to.
            
            Locations and their parameters include:
            <ul>
                <li><b>APPAUTH</b> - allows the user to select and authorize a health record for use 
                        with the specified application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>APPREDIRECT</b> - Redirect user to a HealthVault application.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the destination application.</li>
                        <li>refappid - A GUID that uniquely identifies the referring application.</li>
                        <li>target - string used as the "target" parameter when user browser is 
                                 redirected to the destination application's action-url.</li>
                        <li>targetqs - string used as the "targetqs" parameter when user browser is 
                                 redirected to the destination application's action-url</li>
                    </ul>
                </li>
                <li><b>APPSIGNOUT</b> - Signs the user out of HealthVault.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                    </ul>
                </li>
                <li><b>AUTH</b> - the sign-in page
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at one time.</li>
                        <li>forceappauth - force redirect to APPAUTH target once user is authenticated.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>CREATEACCOUNT</b> - Allows the user to create a new HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>nsi - no sign in page. The sign in page (where the user enters an email address) is bypassed if set to 1.</li>
                    </ul>
                </li>
                <li><b>CREATEAPPLICATION</b> - Allows a SODA master application to create a new client application instance.
                    <ul>
                        <li>publickey - the public key of the new client application instance.  The key
                                 must be an X509 certificate that is base64 encoded.</li>
                        <li>appid - the GUID that uniquely identifies the SODA master application.  The new application instance will
                                 be a child of this master application.</li>
                        <li>instanceid - the GUID that will be assigned to the client application.  This ID must be unique
                                 for every application instance.</li>
                        <li>instancename - A string that identifies the device the new application instance will run on, such
                                 as the computer name.</li>
                    </ul>
                </li>
                <li><b>CREATERECORD</b> - Allows the user to create a new HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>ismra - the application can use multiple records for the same user at 
                                 one time.</li>
                        <li>onopt# - A sequence of online optional authorization rule names
                                 identifying which rules to present.  The sequence begins with 1.</li>
                        <li>offopt# - A sequence of offline optional authorization rule names  
                                 identifying which rules to present.  The sequence begins with 1.</li>
                    </ul>
                </li>
                <li><b>HELP</b> - The HealthVault help page.
                    <ul>
                        <li>topicid - optional. If not specified the table of contents will be shown.
                            <ul>
                                <li>faq - HealthVault Frequently Asked Questions</li>
                                <li>HelpDirectory - Main HealthVault help page</li>
                                <li>PrivacyPolicy - HealthVault privacy policy</li>
                                <li>Service Agreement - HealthVault Service Agreement</li>
                                <li>CodeofConduct - HealthVault Code of Conduct</li>
                            </ul>
                        </li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>MANAGEACCOUNT</b> - Takes the user to a page to manage their account profile.
                <br/>The shell does not provide a mechanism to return to the application from the
                account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>RECONCILE</b> - A page that allows a HealthVault user to review the individual 
                                       data elements within a CCR or CCD item and transform/merge them into individual HealthVault items in their record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                        <li>thingid - CCR/CCD item identifier.</li>
                    </ul>
                </li>
                <li><b>RECORDLIST</b> - A page that lists all records of a HealthVault user.
                    <ul>
                        <li>appid - optional, the page displays only records which the specified application is authorized to access.</li>
                    </ul>
                </li>
                <li><b>SHAREDAPPDETAILS</b> - Allows the user to manage application authorization for a HealthVault record.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                    The shell does not provide a mechanism to return to the application from the
                    account management page, so it is good practice to open the page in a new browser window.
                </li>
                <li><b>SHARERECORD</b> - Allows the user to share a record that they are a custodian of to another HealthVault account.
                    <ul>
                        <li>appid - A GUID that uniquely identifies the application.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
                <li><b>VIEWITEMS</b> - Allows a HealthVault user to view all of the items of the specified data type in the their record.
                    <ul>
                        <li>typeid - data type identifier.</li>
                        <li>additem - flag to show the new item dialog for the data type.</li>
                        <li>extrecordid - record identifier.</li>
                    </ul>
                </li>
            </ul>
            </param>
            
            <remarks>
            The <paramref name="targetLocation"/> will be passed as the target parameter value to
            the redirector URL.
            </remarks>
            
            <returns>
            The constructed URL.
            </returns>
            
            <exception cref="T:System.UriFormatException">
            If the specific target location causes an improper URL to be
            constructed.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String)">
            <summary>
            Get's the authenticated person's information using the specified authentication token.
            </summary>
            
            <param name="authToken">
            The authentication token for a user. This can be retrieved by extracting the WCToken
            query string parameter from the request after the user has been redirected to the
            HealthVault AUTH page. See <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)"/> for more information.
            </param>
            
            <returns>
            The information about the logged in person.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GetPersonInfo(System.String,System.Guid)">
            <summary>
            Get's the authenticated person's information using the specified authentication token.
            </summary>
            
            <param name="authToken">
            The authentication token for a user. This can be retrieved by extracting the WCToken
            query string parameter from the request after the user has been redirected to the
            HealthVault AUTH page. See <see cref="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToShellUrl(System.Web.HttpContext,System.String)"/> for more information.
            </param>
            
            <param name="appId">
            The unique identifier for the application.
            </param>
            
            <returns>
            The information about the logged in person.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.StripFromQueryString(System.Web.HttpContext,System.String[])">
            <summary>
            Removes the specified variables from the query string.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="keys">
            variable(s) to remove 
            </param>
            
            <returns> 
            original url without key 
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.LoadPersonInfoFromCookie(System.Web.HttpContext)">
            <summary>
            Gets the person's information from the cookie.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <returns>
            The person's information that was stored in the cookie or null if the cookie doesn't 
            exist. Note, the <see cref="T:Microsoft.Health.PersonInfo"/> returned may contain an expired authentication
            token.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String,System.Int32@)">
            <summary>
            Compress incoming string.
            </summary>
            
            <param name="data">
            String to be compressed.
            </param>
            <param name="bufferLength">
            The length of the incoming string in bytes.
            </param>
            
            <returns>
            Base 64 string of compressed data.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.Compress(System.String)">
            <summary>
            Compress incoming string.
            </summary>
            
            <param name="data">
            String to be compressed.
            </param>
            
            <returns>
            Base 64 string of compressed data.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String)">
            <summary>
            Decompress a compressed string.
            </summary>
            
            <param name="compressedData">
            Base 64 String of compressed data.
            </param>
            
            <returns>
            Uncompressed string.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.Decompress(System.String,System.Int32)">
            <summary>
            Decompress a compressed string.
            </summary>
            
            <param name="compressedData">
            Base 64 string of compressed data.
            </param>
            <param name="decompressedDataLength">
            Length of uncompressed data.
            </param>
            
            <returns>
            Uncompressed string.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SavePersonInfoToCookie(System.Web.HttpContext,Microsoft.Health.PersonInfo,System.Boolean)">
            <summary>
            Stores the specified person's information in the cookie.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="personInfo">
            The person's information to store. If null and <paramref name="clearIfNull"/> is true,
            the cookie will be cleared and the person will be logged off from HealthVault.
            </param>
            
            <param name="clearIfNull">
            If true and <paramref name="personInfo"/> is null, the cookie will be cleared and the
            person will be logged off from HealthVault.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String)">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters to pass to the signin action URL after
            signin.
            </param>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, 
            with the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean,System.String,System.String)">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters to pass to the signin action URL after
            signin.
            </param>
            
            <param name="signupCode">
            The signup code for creating a HealthVault account.  This is required
            for applications in locations with limited access to HealthVault.
            Signup codes may be obtained from
            <see cref="M:Microsoft.Health.ApplicationConnection.NewSignupCode"/>,
            <see cref="M:Microsoft.Health.PatientConnect.PatientConnection.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)"/>,
            <see cref="M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})"/>,
            <see cref="M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)"/>,
            <see cref="M:Microsoft.Health.Package.ConnectPackage.Create(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.PasswordProtectedPackage)"/>,
            <see cref="M:Microsoft.Health.Package.ConnectPackage.CreatePackage(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})"/>,
            and <see cref="M:Microsoft.Health.Package.ConnectPackage.AllocatePackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)"/>
            </param>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, 
            with the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext,System.Boolean)">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="isMra">
            Whether this application simultaneously deals with multiple records
            for the same person.
            </param>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, with 
            the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.RedirectToLogOn(System.Web.HttpContext)">
            <summary>
            Redirects the caller's browser to the logon page for 
            authentication.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <remarks>
            After the user successfully authenticates, they get redirected 
            back to the action url for which the target is set to either
            AppAuthSuccess or AppAuthRejected depending on whether the user
            authorized one or more records for use with the application, 
            with the authentication token in the query
            string. This is stripped out and used to populate HealthVault
            data for the page.<br/>
            <br/>
            This overload assumes that the applications does not simultaneously
            deal with multiple records for the same person i.e. isMra is false.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.LogOff(System.Web.HttpContext)">
            <summary>
            Signs the person out and cleans up the HealthVault session 
            information.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <remarks>
            This should only be used by the HealthVault Shell.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext)">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.Guid)">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="appId">
            The unique identifier for the application.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String)">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL with the specified querystring parameter if any.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters to pass to the signout action URL after
            cleaning up data.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.SignOut(System.Web.HttpContext,System.String,System.Guid)">
            <summary>
            Signs the person out, cleans up the HealthVault session 
            information, and redirects the user's browser to the signout action 
            URL with the specified querystring parameter if any.
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="actionUrlQueryString">
            The query string parameters to pass to the signout action URL after
            cleaning up data.
            </param>
            
            <param name="appId">
            The unique identifier of the application.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.Web.WebApplicationUtilities.GotoHelp(System.Web.HttpContext,System.String)">
            <summary>
            Redirects application to Shell help page
            </summary>
            
            <param name="context">
            The current request context.
            </param>
            
            <param name="topic">
            Optional topic string. For example, "faq" would redirect the user's browser to the
            HealthVault frequently asked questions.
            </param>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationAuthenticationCredential">
            <summary>
            Gets a credential used to authenticate the web application to
            HealthVault.
            </summary>
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection">
            <summary>
            Gets a HealthVault application connection without a user context.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ApplicationConnection"/> connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created and returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationUtilities.DictionaryConnection">
            <summary>
            Gets a HealthVault connection without an authentication token for the user but with
            an application authentication token.
            </summary>
            
            <returns>
            A <see cref="P:Microsoft.Health.Web.WebApplicationUtilities.ApplicationConnection"/> connection.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created a returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.Web.WebApplicationUtilities.AnonymousConnection">
            <summary>
            Gets a HealthVault connection without an authentication token for either the user or
            the application.
            </summary>
            
            <returns>
            A connection to HealthVault that does not contain user or application
            authentication information.
            </returns>
            
            <remarks>
            If a connection has already been made on the page, that connection
            is returned. If no connection has been made, a new connection is
            created a returned.
            </remarks>
            
            <exception cref="T:System.Security.SecurityException">
            If the application private key could not be found in the 
            certificate store to sign requests.
            </exception>
            
        </member>
    </members>
</doc>
